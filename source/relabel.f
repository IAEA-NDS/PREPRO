C=======================================================================
C
C     PROGRAM RELABEL
C     ===============
C     VERSION 69-1 (APRIL 1969)
C     VERSION 73-1 (JUNE 1973)
C     VERSION 77-1 (SEPTEMBER 1977)
C     VERSION 80-1 (AUGUST 1980) IBM VERSION
C     VERSION 83-1 (JANUARY 1983) COMBINED STATEMENT NUMBER SEQUENCE
C                                 AND LINE I.D. INTO ONE PROGRAM.
C     VERSION 86-1 (JANUARY 1986) FORTRAN-77/H VERSION
C     VERSION 88-1 (JULY 1988)   *OPTION...INTERNALLY DEFINE ALL I/O
C                                 FILE NAMES (SEE, SUBROUTINES FILIO1
C                                 AND FILIO2 FOR DETAILS).
C                                *IMPROVED BASED ON USER COMMENTS.
C     VERSION 89-1 (JANUARY 1989)*PSYCHOANALYZED BY PROGRAM FREUD TO
C                                 INSURE PROGRAM WILL NOT DO ANYTHING
C                                 CRAZY.
C                                *UPDATED TO USE NEW PROGRAM CONVERT
C                                 KEYWORDS.
C                                *ADDED LIVERMORE CIVIC COMPILER
C                                 CONVENTIONS.
C     VERSION 92-1 (JANUARY 1992)*ADDED FORTRAN SAVE OPTION
C     VERSION 94-1 (JANUARY 1994)*COMPLETE RE-WRITE
C                                *OUTPUT MINIMUM NON-BLANK LENGTH FOR
C                                 EACH LINE - NO SEQUENCE NUMBERS.
C                                *INCREASED MAXIMUM NUMBER OF LABELS
C                                 PER ROUTINE FROM 1000 TO 50,000
C                                *CAN NOW PROCESS UPPER OR LOWER CASE
C                                 CODING.
C                                *SKIP IMBEDDED BLANKS IN KEYWORDS.
C                                *ADDED WRITE(XX,XX,ERR=YYY,END=ZZZ)
C                                *ADDED OPEN(XX,ERR=YYY,END=ZZZ)
C                                *ADDED CLOSE(XX,ERR=YYY,END=ZZZ)
C                                *INTEGER INSTEAD OF CHARACTERS IS NO
C                                 LONGER SUPPORTED - ALL CHARACTERS
C                                 MUST BE IDENTIFIED AS CHARACTERS.
C                                *VARIABLE FILENAMES TO ALLOW ACCESS
C                                 FILE STRUCTURES
C                                 (WARNING - INPUT PARAMETER FORMAT
C                                 HAS BEEN CHANGED)
C                                *CLOSE ALL FILES BEFORE TERMINATING
C                                 (SEE, SUBROUTINE ENDIT)
C     VERSION 96-1 (JANUARY 1996) *COMPLETE RE-WRITE
C                                 *IMPROVED COMPUTER INDEPENDENCE
C                                 *ALL DOUBLE PRECISION
C                                 *ON SCREEN OUTPUT
C                                 *IMPROVED OUTPUT PRECISION
C                                 *DEFINED SCRATCH FILE NAMES
C                                 *INCREASED THE NUMBER OF LABELS
C                                  IN A ROUTINE FOR 5,000 TO 50,000
C     VERSION 99-1 (MARCH 1999)   *GENERAL IMPROVEMENTS BASED ON
C                                  USER FEEDBACK
C     VERS. 2000-1 (FEBRUARY 2000)*UPDATED TO IGNORE ( AND ) IN QUOTES
C                                 *GENERAL IMPROVEMENTS BASED ON
C                                  USER FEEDBACK
C     VERS. 2002-1 (MAY 2002)     *OPTIONAL INPUT PARAMETERS
C                                 *CORRECTED END=, ERR=, WHEN I/O UNIT
C                                  NUMBER IS DIMENSIONED
C     VERS. 2004-1 (MARCH 2004)   *ADDED INCLUDE FOR COMMON
C                                 *INCREASED THE NUMBER OF LABELS IN
C                                  A ROUTINE FOR 50,000 TO 100,000
C     VERS. 2007-1 (DEC.  2007)   *72 CHARACTER FILE NAMES.
C     VERS. 2010-1 (Apr.  2010)   *General update based on user feedback
C     VERS. 2012-1 (Aug.  2012)   *Added CODENAME
C                                 *32 and 64 bit COMPATIBLE
C                                 *Added ERROR stop
C     VERS. 2015-1 (Jan.  2015)   *Replaced ALL 3 way IF Statements.
C     VERS. 2017-1 (May   2017)   *Updated based on user feedback.
C     VERS. 2018-1 (Jan.  2018)   *On-line output for ALL ENDERROR
C     VERS. 2019-1 (June  2019)   *Identical to 2018-1
C     VERS. 2020-1 (Feb.  2020)   *Identical to 2018-1
C     VERS. 2021-1 (Jan.  2021)   *Update fot FORTRAN 2018
C
C     OWNED, MAINTAINED AND DISTRIBUTED BY
C     ------------------------------------
C     THE NUCLEAR DATA SECTION
C     INTERNATIONAL ATOMIC ENERGY AGENCY
C     P.O. BOX 100
C     A-1400, VIENNA, AUSTRIA
C     EUROPE
C
C     ORIGINALLY WRITTEN BY
C     ------------------------------------
C     Dermott E. Cullen
C
C     PRESENT CONTACT INFORMATION
C     ---------------------------
C     Dermott E. Cullen
C     1466 Hudson Way
C     Livermore, CA 94550
C     U.S.A.
C     Telephone  925-443-1911
C     E. Mail    RedCullen1@Comcast.net
C     Website    RedCullen1.net/HOMEPAGE.NEW
C
C     PURPOSE
C     -------
C     THIS PROGRAM IS DESIGNED TO RE-LABEL A FORTRAN PROGRAM SO THAT
C     STATEMENT LABELS ARE IN INCREASING ORDER IN INCREMENTS OF 10
C     WITHIN EACH ROUTINE.
C
C     THE FOLLOWING TYPES OF FORTRAN STATEMENTS ARE CONSIDERED,
C
C     GO TO NN
C     GO TO (NN,MM,.....,JJ,KK),LL (MULTI LINE O.K.)
C     DO NN
C     IF(......) NN,MM,...JJ,KK
C     IF(......) GO TO NN
C     IF(......) GO TO (NN,MM,.....,JJ,KK),LL (MULTI LINE O.K.)
C     IF(......) READ(.....,END=NN,ERR=MM)
C     IF(......) WRITE(.....,END=NN,ERR=MM)
C     READ(......,END=NN,ERR=MM)
C     OPEN(......,END=NN,ERR=MM)
C
C     GO TO STATEMENTS MAY APPEAR IN THE FORM 'GO TO' OR 'GOTO'. IF
C     THERE IS ROOM ON THE LINE 'GOTO' WILL BE CONVERTED TO 'GO TO'.
C     WHETHER OR NOT 'GOTO' IS CONVERTED TO 'GO TO' IT WILL BE TREATED
C     AS IDENTICAL TO 'GO TO' FOR SUBSEQUENT PROCESSING AND RELACEMENT
C     OF STATEMENT NUMBERS.
C
C     ALL OTHER STATEMENT TYPES ARE NOT CHANGED. IN PARTICULAR ALL I/O
C     STATEMENTS AND ASSOCIATED FORMAT STATEMENTS ARE NOT CONVERTED.
C
C     WARNING
C     -------
C     THIS PROGRAM IS ONLY DESIGNED TO MAINTAIN ENDF/B PRE-PROCESSING
C     PROGRAMS, WHICH ONLY USE A RESTRICTED SET OF FORTRAN STATEMENT
C     TYPES THAT CAN BE USED ON A VARIETY OF DIFFERENT TYPES OF
C     COMPUTERS. THIS PROGRAM IS NOT DESIGNED TO HANDLE ALL POSSIBLE
C     TYPES OF FORTRAN STATEMENTS.
C
C     THE FORTRAN STATEMENTS DESCRIBED ABOVE AND TREATED BY THIS PROGRAM
C     DO NOT INCLUDE ALL POSSIBLE FORTRAN STATEMENTS. AS SUCH THIS
C     PROGRAM IS NOT COMPLETELY GENERAL AND SHOULD ONLY BE USED WITH
C     PROGRAMS THAT ONLY USE THE FORTRAN STATEMENTS DESCRIBED ABOVE.
C
C     FAILURE TO FOLLOW THESE INSTRUCTIONS CAN LEAD TO ERROR IN PROGRAMS
C
C     OPTIONAL STANDARD FILE NAMES (SEE SUBROUTINES FILIO1 AND FILIO2)
C     ----------------------------------------------------------------
C     UNIT  FILE NAME    DESCRIPTION
C     ----  ----------   -----------
C       2   RELABEL.INP  INPUT PARAMETERS
C       3   RELABEL.LST  OUTPUT REPORT
C      10   RELABEL.IN   PROGRAM TO READ
C      11   RELABEL.OUT  PROGRAM TO WRITE
C      12   (SCRATCH)
C
C     INPUT CARDS
C     -----------
C     LINE  COLUMNS  DEFINITION
C     ----  -------  ----------
C        1   1-72    INPUT PROGRAM FILENAME
C                    (STANDARD OPTION = RELABEL.IN)
C        2   1-72    OUTPUT PROGRAM FILENAME
C                    (STANDARD OPTION = RELABEL.OUT)
C
C     LEAVE THE DEFINITION OF THE FILENAMES BLANK - THE PROGRAM WILL
C     THEN USE STANDARD FILENAMES.
C
C     EXAMPLE INPUT NO. 1
C     -------------------
C     TO READ \PREPRO94\RECENT\RECENT.FOR AND
C     WRITE   \PREPRO94\RECENT\RECENT.NEW THE FOLLOWING 2 INPUT LINES
C     ARE REQUIRED,
C
C     \PREPRO94\RECENT\RECENT.FOR
C
C     EXAMPLE INPUT NO. 2
C     -------------------
C     TO READ RELABEL.IN AND WRITE RELABEL.OUT THE FOLOWING 2 INPUT
C     LINES ARE REQUIRED,
C
C     RELABEL.IN
C     RELABEL.OUT
C
C     EXAMPLE INPUT NO. 3
C     -------------------
C     TO READ RELABEL.IN AND WRITE RELABEL.OUT, SINCE THESE ARE THE
C     STANDARD OPTIONS THE 2 INPUT LINES CAN BE COMPLETELY BLANK.
C
C=======================================================================
      INCLUDE 'implicit.h'
C-----08/08/2012 DEFINE CODE NAME
      CHARACTER*8 CODENAME
      COMMON/NAMECODE/CODENAME
      CHARACTER*1 ENDITX,FMTIT,BLANK,PARENL,PARENR,COMMA,CARD1
      INTEGER*4 OUTP,OTAPE
      COMMON/DRACUL/IC10,IC11,IC12A,IC12B,IBLANK,ICFMT
      COMMON/UNITS/INP,OUTP,ITAPE,OTAPE,ISCR
      COMMON/IMAGEC/CARD1(80)
      COMMON/IMAGEI/INEND
      COMMON/NUTABI/NTAB
      COMMON/CHARAC/ENDITX(8,2),FMTIT(6,2),BLANK,PARENL,PARENR,COMMA
      COMMON/ELPASO/IPATH
      INCLUDE 'relabel.h'
c-----------------------------------------------------------------------
C
C     DEFINE ALL I/O UNITS AND OPTIONALLY DEFINE FILE NAMES.
C
c-----------------------------------------------------------------------
C-----08/08/2012 DEFINE CODE NAME
      CODENAME = 'RELABEL '
C-----INITIALIZE TIME
      CALL TIMER
      CALL FILIO1
C-----WRITE HEADING FOR OUTPUT REPORT.
      WRITE(OUTP,160)
      WRITE(*   ,160)
C-----LOAD ALL DATA INTO LABELLED COMMON
      CALL BLOCKX
C-----READ INPUT PARAMETERS
      CALL READIN
C-----INITIALIZE END OF FILE ON INPUT FILE OFF.
      INEND=0
C-----INITIALIZE ALL I/O UNITS.
      IC10=0
      IC11=0
      IC12A=0
      IC12B=0
      IBLANK=0
      ICFMT=0
C-----READ AND LIST FIRST LINE OF PROGRAM. CONTINUE READING UNTIL
C-----A LINE IS FOUND THAT IS NOT A COMMENT LINE.
      NTAB=0
      CALL CARDIN
      IF(INEND.le.0) go to 20
      go to 80
c-----------------------------------------------------------------------
C
C     READ ALL CARDS OF NEXT ROUTINE TO SCRATCH. COLLECT ALL
C     STATEMENT LABELS (COLUMNS 1-5).
C
c-----------------------------------------------------------------------
C-----INITIALIZE FOR NEXT ROUTINE. INITIALIZE LABEL COUNT AND REWIND
C-----SCRATCH FILE.
   10 NTAB=0
      REWIND ISCR
      CALL CARDIN
      IF(INEND.GT.0) GO TO 80
C-----LIST FIRST LINE OF NEXT ROUTINE.
      WRITE(OUTP,90) CARD1
      WRITE(*   ,90) CARD1
C-----READ AND SAVE NEXT LINE. SKIP COMMENTS AND RIGHT ADJUST
C-----STATEMENT LABELS TO END IN COLUMN 5 AND INFORMATION TO START
C-----IN COLUMN 7.
   20 CALL CARDIN
      IF(INEND.GT.0) GO TO 60
C-----IS STATEMENT LABELLED (LABEL IS RIGHT ADJUSTED. ONLY TEST COL. 5).
      IF(CARD1(5).EQ.BLANK) GO TO 50
C-----NEW LABEL FOUND. TERMINATE IF INCORE LABEL TABLE IS FULL.
      NTAB=NTAB+1
      IF(NTAB.LE.MAXLABEL) GO TO 30
      WRITE(OUTP,150) MAXLABEL
      WRITE(*   ,150) MAXLABEL
      CALL ENDERROR
   30 DO 40 M=1,5
      OLDTAB(M,NTAB)=CARD1(M)
   40 CONTINUE
      GO TO 20
C-----IS THIS THE END OF A ROUTINE.
   50 CALL SAMEKEY(7,CARD1,ENDITX,8,IMOK)
      IF(IMOK.EQ.0) GO TO 20
C-----END OF ROUTINE FOUND. SET UP TO READ SCRATCH FILE.
      END FILE ISCR
C-----DETERMINE WHICH STATEMENT LABELS ARE REFERENCED.
      IPATH=1
      CALL PASS1
C-----RELABEL AND OUTPUT ROUTINE.
      IPATH=2
      CALL PASS1
      GO TO 10
c-----------------------------------------------------------------------
C
C     END OF FILE BEFORE END OF ROUTINE. PRINT ERROR MESSAGE.
C     COPY ALL CARDS FROM SCRATCH FILE TO NEW FILE.
C
c-----------------------------------------------------------------------
   60 END FILE ISCR
      REWIND ISCR
      WRITE(OUTP,100)
      WRITE(*   ,100)
   70 CALL READX(ISCR,IC12A,IEND)
      IF(IEND.LT.0) GO TO 80
      CALL WRITEO(OTAPE,IC11)
      GO TO 70
c-----------------------------------------------------------------------
C
C     END OF PROGRAM. PRINT STATISTICS.
C
c-----------------------------------------------------------------------
   80 WRITE(OUTP,110) IC10
      IF(IBLANK.NE.0) WRITE(OUTP,120) IBLANK
      IF(ICFMT.NE.0) WRITE(OUTP,130) ICFMT
      IF(IC10.NE.IC11.OR.IC10.NE.IC12A.OR.IC10.NE.IC12B)
     1 WRITE(OUTP,140) IC10,IC11,IC12B,IC12A
      WRITE(*   ,110) IC10
      IF(IBLANK.NE.0) WRITE(*   ,120) IBLANK
      IF(ICFMT.NE.0) WRITE(*   ,130) ICFMT
      IF(IC10.NE.IC11.OR.IC10.NE.IC12A.OR.IC10.NE.IC12B)
     1 WRITE(*   ,140) IC10,IC11,IC12B,IC12A
      CALL ENDIT
      GO TO 80   ! CANNOT GET TO HERE.
   90 FORMAT(/1X,80A1/1X,79('-'))
  100 FORMAT(' ****** End of File Before End of Routine ******')
  110 FORMAT(1X,70(' ')/1X,I8,' Lines Translated')
  120 FORMAT(1X,I8,' Blank Lines Deleted')
  130 FORMAT(1X,I8,' Unused Format Lines Deleted')
  140 FORMAT(///' Line Count NOT Conserved'/
     1 ' Read---------------',I8/
     2 ' Written------------',I8/
     3 ' Scratch (Pass 1)---',I8/
     4 ' Scratch (Pass 2)---',I8)
  150 FORMAT(' Over ',I6,' Statement Labels...Execution Terminated')
  160 FORMAT(' Incremental Statement Labels (RELABEL 2021-1)'/
     1 1X,79('-'))
      END
      SUBROUTINE READIN
C=======================================================================
C
C     READ INPUT PARAMETERS AND OPEN FILES
C
C     IF INPUT FILENAMES ARE BLANK USE STANDARD FILENAMES
C
C=======================================================================
C
C     READ FILENAMES - IF BLANK USE STANDARD FILENAMES
C
      INCLUDE 'implicit.h'
      CHARACTER*72 NAMEIN,NAMEOUT
      INTEGER*4 OUTP,OTAPE
      COMMON/UNITS/INP,OUTP,ITAPE,OTAPE,ISCR
      COMMON/IOSTATUS/ISTAT1,ISTAT2
      COMMON/NAMEX/NAMEIN,NAMEOUT
C-----INPUT PROGRAM.
      IF(ISTAT1.EQ.1) GO TO 20
      READ(INP,10,END=20,ERR=20) NAMEIN
   10 FORMAT(A72)
      IF(NAMEIN.EQ.' ') NAMEIN = 'RELABEL.IN'
C-----OUTPUT PROGRAM.
      READ(INP,10,END=30,ERR=30) NAMEOUT
      IF(NAMEOUT.EQ.' ') NAMEOUT = 'RELABEL.OUT'
      GO TO 40
C-----USE DEFAULT FILENAMES
   20 NAMEIN  = 'RELABEL.IN'
   30 NAMEOUT = 'RELABEL.OUT'
      ISTAT1 = 1
C-----PRINT FINAL FILENAMES
   40 WRITE(OUTP,50) NAMEIN,NAMEOUT
      WRITE(*   ,50) NAMEIN,NAMEOUT
   50 FORMAT(
     1 ' Program Input and Output Filenames'/1X,A72/
     2 1X,A72/1X,79('-'))
c-----------------------------------------------------------------------
C
C     OPEN PROGRAM FILES
C
c-----------------------------------------------------------------------
      CALL FILIO2
c-----------------------------------------------------------------------
C
C     TERMINATE IF ERROR OPENING ORIGINAL FILE
C
c-----------------------------------------------------------------------
      IF(ISTAT2.EQ.1) THEN
      WRITE(OUTP,60) NAMEIN
      WRITE(   *,60) NAMEIN
   60 FORMAT(//' ERROR - Opening original file'/1X,A72//)
      CALL ENDERROR
      ENDIF
      RETURN
      END
      SUBROUTINE PASS1
C=======================================================================
C
C     AN ENTIRE ROUTINE HAS BEEN COPIED FROM THE ORIGINAL FILE TO
C     A SCRATCH FILE. ALL STATEMENT LABELS IN COLUMNS 1-5 HAVE BEEN
C     READ AND ASSIGNED EQUIVALENTS IN INCREMENTS OF TEN. THIS
C     ROUTINE WILL EITHER,
C     IPATH=1 - DETERMINE WHICH STATEMENT LABELS ARE REFERENCED.
C     IPATH=2 - COPY THE ROUTINE FROM SCRATCH TO THE FINAL FILE
C     REPLACING ALL STATEMENT LABELS IN COLUMNS 1-5 AND ALL
C     REFERENCES TO THESE LABELS THAT APPEAR IN COLUMNS 7-72.
C
C=======================================================================
      INCLUDE 'implicit.h'
      INTEGER*4 OUTP,OTAPE
      CHARACTER*1 ENDITX,FMTIT,BLANK,PARENL,PARENR,COMMA,CARD1,DIGIT
      COMMON/UNITS/INP,OUTP,ITAPE,OTAPE,ISCR
      COMMON/DRACUL/IC10,IC11,IC12A,IC12B,IBLANK,ICFMT
      COMMON/POINT/LB1,LTOP,LB2
      COMMON/NUTABI/NTAB
      COMMON/IMAGEC/CARD1(80)
      COMMON/CHARAC/ENDITX(8,2),FMTIT(6,2),BLANK,PARENL,PARENR,COMMA
      COMMON/MYWAY/IWAY
      COMMON/ELPASO/IPATH
      INCLUDE 'relabel.h'
      DIMENSION DIGIT(10)
      DATA DIGIT/'0','1','2','3','4','5','6','7','8','9'/
C-----DURING FIRST PASS TURN OFF OUTPUT.
      IF(IPATH.EQ.2) GO TO 20
      NTAPE=OTAPE
      OTAPE=0
      IC12X=IC12A
      IC12A=IC12B
C-----INITIALIZE USED FLAGS.
      IF(NTAB.LE.0) GO TO 80
      DO 10 J=1,NTAB
      IMUSED(J)=0
   10 CONTINUE
      GO TO 80
C-----LOAD NEW STATEMENT LABELS (LOAD BLANKS FOR UNREFERENCED LABELS).
   20 IF(NTAB.LE.0) GO TO 80
      J=0
      DO 70 JJ=1,NTAB
      IF(IMUSED(JJ).GT.0) GO TO 40
      DO 30 K=1,5
      NEWTAB(K,JJ)=BLANK
   30 CONTINUE
      GO TO 70
   40 J=J+1
      DO 50 K=1,4
      NEWTAB(K,JJ)=BLANK
   50 CONTINUE
      NEWTAB(5,JJ)='0'
      J2=J
      K=4
   60 I1=J2/10
      I2=J2-10*I1
      NEWTAB(K,JJ)=DIGIT(I2+1)
      IF(I1.LE.0) GO TO 70
      J2=I1
      K=K-1
      GO TO 60
   70 CONTINUE
C-----SET UP TO READ SCRATCH FILE.
   80 REWIND ISCR
C-----IF ALL OLD AND NEW LABELS ARE IDENTICAL (I.E. ALL LABELS IN
C-----ROUTINE ARE IN ORDER AND INCREMENTED BY 10) THERE IS NOTHING
C-----TO DO BUT COPY THE ROUTINE FROM SCRATCH TO THE FINAL FILE.
      IF(NTAB.LE.0.OR.IPATH.EQ.1) GO TO 110
      DO 100 N=1,NTAB
      DO 90 M=1,5
      IF(OLDTAB(M,N).NE.NEWTAB(M,N)) GO TO 110
   90 CONTINUE
  100 CONTINUE
C-----ALL LABELS ARE IDENTICAL. SET LABEL COUNT TO ZERO TO FORCE
C-----SIMPLE COPY.
      NTAB=0
  110 CALL READX(ISCR,IC12A,IEND)
      IF(IEND.LT.0) GO TO 120
      GO TO 130
  120 WRITE(OUTP,390)
      GO TO 360
C-----COPY COMMENT CARDS.
  130 IF(CARD1(1).EQ.'C'.OR.CARD1(1).EQ.'c') GO TO 350
C-----FIND LAST NON-BLANK CHARACTER ON LINE.
      CALL SKIPL1
      IF(LTOP.LE.6) GO TO 350
C-----FIND FIRST NON-BLANK CHARACTER ON LINE.
      LB1=6
      CALL SKIPR
C-----COPY BLANK CARDS.
      IF(LB1.GE.LTOP) GO TO 350
C-----CHECK FOR END OF ROUTINE.
      CALL SAMEKEY(7,CARD1,ENDITX,8,IMOK)
      IF(IMOK.EQ.0) GO TO 150
      CALL WRITEO(OTAPE,IC11)
C-----END OF ROUTINE. CHECK FOR UNUSED LABELS.
      IF(NTAB.LE.0.OR.IPATH.EQ.2) GO TO 360
      IUSE=0
      DO 140 L=1,NTAB
      IF(IMUSED(L).GT.0) GO TO 140
      IF(IUSE.LE.0) WRITE(OUTP,400)
      IUSE=IUSE+1
      WRITE(OUTP,410) (OLDTAB(M,L),M=1,5)
  140 CONTINUE
      GO TO 360
C-----IF NO STATEMENT LABELS TO CHANGE COPY LINE.
  150 IF(NTAB.LE.0) GO TO 350
C-----IS LINE LABELLED (ONLY CHECK COLUMN 5 SINCE LABELS HAVE ALL
C-----BEEN RIGHT ADJUSTED).
      IF(CARD1(5).EQ.BLANK) GO TO 230
C-----LINE IS LABELLED. LOOK UP LABEL IN TABLE.
      DO 170 N=1,NTAB
      DO 160 M=1,5
      IF(CARD1(M).NE.OLDTAB(M,N)) GO TO 170
  160 CONTINUE
      GO TO 180
  170 CONTINUE
C-----ERROR. LABEL IS NOT IN TABLE.
      WRITE(OUTP,380) CARD1,IC12A
      GO TO 230
C-----WAS THE LABEL USED.
  180 IF(IPATH.NE.2.OR.IMUSED(N).GT.0) GO TO 210
C-----IF A FORMAT DELETE IT AND ALL CONTINUATIONS.
      CALL SAMEKEY(7,CARD1,FMTIT,6,IMOK)
      IF(IMOK.LE.0) GO TO 200
      WRITE(OUTP,430) CARD1,IC12A
      ICFMT=ICFMT+1
  190 CALL READX(ISCR,IC12A,IEND)
      IF(IEND.LT.0) GO TO 120
C-----COPY COMMENT CARDS.
      IF(CARD1(1).EQ.'C'.OR.CARD1(1).EQ.'c') GO TO 350
C-----SKIP CONTINUATION, OTHERWISE START OF NEXT STATEMENT.
      IF(CARD1(6).EQ.' ') GO TO 130
      ICFMT=ICFMT+1
      GO TO 190
C-----OTHERWISE PRINT WARNING STATEMENT LABEL REPLACED BY BLANK.
  200 WRITE(OUTP,420) CARD1,IC12A
C-----DEFINE NEW STATEMENT LABEL.
  210 DO 220 M=1,5
      CARD1(M)=NEWTAB(M,N)
  220 CONTINUE
C-----DOES LINE CONTAIN (1) GO TO, (2) GOTO, (3) IF, (4) DO, (5) READ,
C-----(6) OPEN.
  230 DO 240 NTRY=1,8
      CALL IMSAME(LB1,CARD1,NTRY,IMOK)
      IF(IMOK.GT.0) GO TO 250
  240 CONTINUE
C-----NO. COPY LINE.
      GO TO 350
C-----YES.
  250 IWAY=0
C-----BRANCH TO HANDLE (1) GO TO, (2) GOTO, (3) IF, (4) DO,
C-----(5) READ( OR (6) OPEN(
      GO TO (290,260,300,310,320,330,320,330),NTRY
C-----IF THERE IS ROOM CONVERT 'GOTO' TO 'GO TO'
  260 IF(LTOP.LT.72) GO TO 270
      WRITE(OUTP,460) CARD1,IC12A
      GO TO 290
  270 LL=LTOP
      LB1M1=LB1-1
      WRITE(OUTP,440) CARD1,IC12A
      DO 280 L=LB1M1,LTOP
      CARD1(LL+1)=CARD1(LL)
      LL=LL-1
  280 CONTINUE
      CARD1(LL+1)=BLANK
      WRITE(OUTP,450) CARD1
      LB1=LB1+1
  290 CALL GOTOIT
      GO TO 340
  300 CALL IFIT
      GO TO 340
  310 CALL DOIT
      GO TO 340
C-----READ OR WRITE.
  320 CALL READIT(1)
      GO TO 340
C-----OPEN OR CLOSE - SAME AS READ OR WRITE AS FAR AS FINDING
C-----END= OR ERR=
  330 CALL READIT(2)
  340 IF(IWAY.lt.0) go to 120
      IF(IWAY.eq.0) go to 110
      go to 130
  350 CALL WRITEO(OTAPE,IC11)
      GO TO 110
C-----RETURN OUTPUT UNIT NUMBER AND RECORD COUNTS.
  360 IF(IPATH.EQ.2) GO TO 370
      OTAPE=NTAPE
      IC12B=IC12A
      IC12A=IC12X
  370 RETURN
  380 FORMAT(1X,80A1,' (',I5,' ) No Equivalent Statement Label')
  390 FORMAT(' ****** Program ERROR...End of File on Scratch ******')
  400 FORMAT(' Statement Labels NOT Referenced (Will be Set to Blank)')
  410 FORMAT(1X,5A1)
  420 FORMAT(1X,80A1,'(',I5,' ) WARNING - Statement Label Set Blank')
  430 FORMAT(1X,80A1,'(',I5,' ) Unused Format Deleted')
  440 FORMAT(1X,' WARNING - Converted GOTO to GO TO'/
     1 1X,80A1,' (',I5,' )')
  450 FORMAT(1X,80A1)
  460 FORMAT(1X,' WARNING - Cannot Convert GOTO to GO TO'/
     1 1X,80A1,'(',I5,' )')
      END
      SUBROUTINE GOTOIT
C=======================================================================
C
C     A GO TO LINE HAS BEEN FOUND. TWO POSSIBLE FORMS ARE CONSIDERED.
C
C     GO TO NN
C     GO TO (NN,MM,.....,JJ,KK),LL (MULTI LINE O.K.)
C
C     THIS ROUTINE WILL DECODE EITHER OF THESE FORMS AND REPLACE EACH
C     OF THE REFERENCES TO A STATEMENT LABEL (NN,MM,.....,JJ,KK) BY A
C     REFERENCE TO THE NEW STATEMENT LABEL.
C
C=======================================================================
      INCLUDE 'implicit.h'
      INTEGER*4 OUTP,OTAPE
      CHARACTER*1 ENDITX,FMTIT,BLANK,PARENL,PARENR,COMMA,CARD1,CARD2
      COMMON/UNITS/INP,OUTP,ITAPE,OTAPE,ISCR
      COMMON/DRACUL/IC10,IC11,IC12A,IC12B,IBLANK,ICFMT
      COMMON/CHARAC/ENDITX(8,2),FMTIT(6,2),BLANK,PARENL,PARENR,COMMA
      COMMON/POINT/LB1,LTOP,LB2
      COMMON/IMAGEC/CARD1(80)
      DIMENSION CARD2(80)
C-----FIND NEXT NON-BLANK CHARACTER ON LINE.
   10 CALL SKIPR
      IF(LB1.GE.LTOP) GO TO 40
C-----IF CHARACTER IS LEFT PARENTHESIS ENTER REPEAT LOOP.
C-----OTHERWISE ASSUME ONLY ONE LABEL.
      IF(CARD1(LB1+1).NE.PARENL) GO TO 20
      LB1=LB1+1
      CALL REPEATX
      RETURN
C-----SCAN NEXT 6 CHARACTERS FOR FIRST BLANK.
   20 DO 30 LB2=1,6
      IF(CARD1(LB2+LB1).EQ.BLANK) GO TO 70
   30 CONTINUE
C-----CANNOT DECODE GO TO LABEL - TRY FOR CONTINUATION.
   40 CALL WRITEO(OTAPE,IC11)
      DO 50 I=1,80
      CARD2(I)=CARD1(I)
   50 CONTINUE
      CALL READX(ISCR,IC12A,IEND)
      IF(IEND.LT.0) GO TO 60
      IF(CARD1(6).EQ.' ') GO TO 60
      IF(CARD1(1).EQ.'C'.OR.CARD1(1).EQ.'c') GO TO 60
      GO TO 10
C-----CANNOT DECODE GO TO LABEL.
   60 WRITE(OUTP,80) CARD2,IC12A-1
      WRITE(OUTP,80) CARD1,IC12A
      CALL WRITEO(OTAPE,IC11)
      RETURN
C-----INSERT NEW LABEL AND OUTPUT LINE.
   70 LB2=LB2-1
      CALL INSERT
      CALL WRITEO(OTAPE,IC11)
      RETURN
   80 FORMAT(1X,80A1,' (',I5,' ) Cannot Decode GO TO Label')
      END
      SUBROUTINE IFIT
C=======================================================================
C
C     AN IF LINE HAS BEEN FOUND. THREE FORMS ARE CONSIDERED.
C
C     IF(......) NN,MM,....,JJ,KK
C     IF(......) GO TO NN
C     IF(......) GO TO (NN,MM,....,JJ,KK),LL (MULTI LINE O.K.)
C     IF(......) READ(.....,END=NN)
C     IF(......) OPEN(.....,END=NN)
C
C     THE LAST FOUR CASES ARE HANDLED BY CONSIDERING EVERYTHING
C     PAST THE BALANCED PARENTHESIS OF THE IF STATEMENT IF(......)
C     TO BE NORMAL GO TO STATEMENTS (SEE..GOTOIT) OR NORMAL READ
C     STATEMENTS (SEE..READIT). THE FIRST CASE IS HANDLED BY THIS
C     AND ALL REFERENCES TO STATEMENT LABELS NN,MM,.....,JJ,KK ARE
C     REPLACED BY REFERENCES TO NEW STATEMENT LABELS.
C
C     GO TO MAY APPEAR IN THE FORM 'GO TO' OR 'GOTO'. IF THERE IS
C     SPACE ON THE LINE 'GOTO' WILL BE CONVERTED TO 'GO TO'.
C
C=======================================================================
      INCLUDE 'implicit.h'
      CHARACTER*1 ENDITX,FMTIT,BLANK,PARENL,PARENR,COMMA,CARD1,QUOTE
      INTEGER*4 ALFOK,OUTP,OTAPE
      COMMON/UNITS/INP,OUTP,ITAPE,OTAPE,ISCR
      COMMON/DRACUL/IC10,IC11,IC12A,IC12B,IBLANK,ICFMT
      COMMON/CHARAC/ENDITX(8,2),FMTIT(6,2),BLANK,PARENL,PARENR,COMMA
      COMMON/POINT/LB1,LTOP,LB2
      COMMON/IMAGEC/CARD1(80)
      COMMON/MYWAY/IWAY
      DATA QUOTE/"'"/
C-----FIND BALANCED PARENTHESIS - IGNORE EVERYTHING BETWEEN QUOTES.
      LEVEL=1
      MYQUOTE = 0
   10 LL=LB1+1
      DO 40 LB1=LL,LTOP
C-----FIRST CHECK FOR QUOTE.
      IF(CARD1(LB1).NE.QUOTE ) GO TO 20
      MYQUOTE = 1 - MYQUOTE
   20 IF(MYQUOTE.EQ.1) GO TO 40
C-----NEXT CHECK FOR ( AND )
      IF(CARD1(LB1).NE.PARENR) GO TO 30
      LEVEL=LEVEL-1
      IF(LEVEL.le.0) go to 90
      go to 40
   30 IF(CARD1(LB1).NE.PARENL) GO TO 40
      LEVEL=LEVEL+1
   40 CONTINUE
      CALL WRITEO(OTAPE,IC11)
      CALL READX(ISCR,IC12A,IEND)
      IF(IEND.LT.0) GO TO 50
      GO TO 60
   50 IWAY=-1
      RETURN
C-----EXPECT IF CONTINUATION = COLUMN 6 NOT BLANK AND
C-----NOT A COMMENT.
   60 IF(CARD1(6).EQ.BLANK) GO TO 70
      IF(CARD1(1).NE.'C'.AND.CARD1(1).NE.'c') GO TO 80
   70 WRITE(OUTP,240) CARD1,IC12A
      IWAY=1
      RETURN
C-----FIND LAST NON-BLANK COLUMN ON LINE.
   80 CALL SKIPL1
C-----EXPECT IF CONTINUATION.
      IF(LTOP.LE.6) GO TO 70
C-----FIND FIRST NON-BLANK CHARACTER ON LINE.
      LB1=6
      CALL SKIPR
      IF(LB1.GE.LTOP) GO TO 50
      GO TO 10
C-----FIND NEXT NON-BLANK CHARACTER.
   90 CALL SKIPR
      IF(LB1.LT.LTOP) GO TO 110
  100 CALL WRITEO(OTAPE,IC11)
      CALL READX(ISCR,IC12A,IEND)
      IF(IEND.LT.0) GO TO 50
C-----EXPECT IF CONTINUATION = COLUMN 6 NOT BLANK
C-----       OR COMMENT.
      IF(CARD1(6).EQ.BLANK) GO TO 70
      IF(CARD1(1).EQ.'C'.OR.CARD1(1).EQ.'c') GO TO 70
      CALL SKIPL1
      IF(LTOP.LE.6) GO TO 100
      LB1=6
      CALL SKIPR
C-----DETERMINE IF THE IF IS FOLLOWED BY A 'GO TO'.
  110 CALL IMSAME(LB1,CARD1,1,IMOK)
      IF(IMOK.GT.0) GO TO 140
C-----DETERMINE IF THE IF IS FOLLOWED BY A 'GOTO'.
      CALL IMSAME(LB1,CARD1,2,IMOK)
      IF(IMOK.EQ.0) GO TO 150
C-----IF THERE IS ROOM CONVERT 'GOTO' TO 'GO TO'
      IF(LTOP.LT.72) GO TO 120
      WRITE(OUTP,270) CARD1,IC12A
      GO TO 140
  120 LL=LTOP
      LB1P3=LB1-1
      WRITE(OUTP,250) CARD1,IC12A
      DO 130 L=LB1P3,LTOP
      CARD1(LL+1)=CARD1(LL)
      LL=LL-1
  130 CONTINUE
      CARD1(LL+1)=BLANK
      WRITE(OUTP,260) CARD1
      LB1=LB1+1
C-----PROCESS REMAINDER AS A GO TO.
  140 CALL GOTOIT
      RETURN
C-----DETERMINE IF THE IF IS FOLLOWED BY A READ(.
  150 CALL IMSAME(LB1,CARD1,5,IMOK)
      IF(IMOK.GT.0) GO TO 160
C-----DETERMINE IF THE IF IS FOLLOWED BY A WRITE(.
      CALL IMSAME(LB1,CARD1,7,IMOK)
      IF(IMOK.EQ.0) GO TO 170
C-----PROCESS REMAINDER OF READ( OR WRITE(
  160 CALL READIT(1)
      RETURN
C-----DETERMINE IF THE IF IS FOLLOWED BY AN OPEN(.
  170 CALL IMSAME(LB1,CARD1,6,IMOK)
      IF(IMOK.GT.0) GO TO 180
C-----DETERMINE IF THE IF IS FOLLOWED BY AN CLOSE(.
      CALL IMSAME(LB1,CARD1,8,IMOK)
      IF(IMOK.EQ.0) GO TO 190
C-----PROCESS REMAINDER AS A OPEN( OR CLOSE(.
C-----OPEN OR CLOSE - SAME AS READ OR WRITE AS FAR AS FINDING
C-----END= OR ERR=
  180 CALL READIT(2)
      RETURN
C-----SEARCH FOR FIELDS OF UP TO 5 ALPHANUMERIC CHARACTERS
C-----SEPARATED BY COMMAS.
  190 ALFOK=1
      DO 210 L=1,6
      IF(CARD1(LB1+L).EQ.COMMA) GO TO 220
      IF(CARD1(LB1+L).LT.'0'.OR.CARD1(LB1+L).GT.'9') GO TO 200
      IF(L.EQ.1) ALFOK=0
      GO TO 210
  200 IF(ALFOK.LE.0) GO TO 230
      IF(CARD1(LB1+L).GE.'A'.AND.CARD1(LB1+L).LE.'Z') GO TO 210
      IF(CARD1(LB1+L).GE.'a'.AND.CARD1(LB1+L).LE.'z') GO TO 210
      GO TO 230
  210 CONTINUE
      GO TO 230
  220 CALL REPEATX
      RETURN
  230 CALL WRITEO(OTAPE,IC11)
      RETURN
  240 FORMAT(1X,80A1,' (',I5,' ) Expect IF Continuation')
  250 FORMAT(1X,' WARNING - Converted GOTO to GO TO'/
     1 1X,80A1,' (',I5,' )')
  260 FORMAT(1X,80A1)
  270 FORMAT(1X,' WARNING - Cannot Convert GOTO to GO TO'/
     1 1X,80A1,' (',I5,' )')
      END
      SUBROUTINE REPEATX
C=======================================================================
C
C     REFERENCES TO A SERIES OF STATEMENT LABELS HAS BEEN FOUND.
C     THREE FORMS ARE CONSIDERED.
C
C     GO TO (NN,MM,....,JJ,KK),LL
C     IF(.......) NN,MM,.....,JJ,KK
C     IF(.......) GO TO (NN,MM,......,JJ,KK),LL
C
C     THE STRING OF REFERENCES TO STATEMENT LABELS ARE SCANNED FROM
C     LEFT TO RIGHT AND ALL REFERENCES TO STATEMENT LABELS ARE
C     REPLACED BY REFERENCES TO NEW STATEMENT LABELS. THE END OF
C     THE STRING OF REFERENCES TO STATEMENT LABELS IS INDICATED BY
C     EITHER A BLANK OR A RIGHT PARENTHESIS.
C
C=======================================================================
      INCLUDE 'implicit.h'
      CHARACTER*1 ENDITX,FMTIT,BLANK,PARENL,PARENR,COMMA,CARD1
      INTEGER*4 OUTP,OTAPE
      COMMON/UNITS/INP,OUTP,ITAPE,OTAPE,ISCR
      COMMON/DRACUL/IC10,IC11,IC12A,IC12B,IBLANK,ICFMT
      COMMON/POINT/LB1,LTOP,LB2
      COMMON/IMAGEC/CARD1(80)
      COMMON/CHARAC/ENDITX(8,2),FMTIT(6,2),BLANK,PARENL,PARENR,COMMA
      COMMON/MYWAY/IWAY
      IEND=0
C-----SKIP LEADING BLANKS, COMMAS OR RIGHT PARENTHESIS
   10 DO 20 L=LB1+1,LTOP
      IF(CARD1(L).NE.BLANK.AND.
     1   CARD1(L).NE.COMMA.AND.
     2   CARD1(L).NE.PARENR) GO TO 30
   20 CONTINUE
C-----FINISHED WITH LINE
      GO TO 100
   30 LB1=L-1
C-----FIND NEXT LABEL (TERMINATED WITH BLANK,COMMA OR RIGHT PAREN)
      DO 40 LB2=1,7
      IF(CARD1(LB2+LB1).EQ.BLANK) GO TO 50
      IF(CARD1(LB2+LB1).EQ.COMMA) GO TO 70
      IF(CARD1(LB2+LB1).EQ.PARENR) GO TO 60
   40 CONTINUE
      WRITE(OUTP,140) CARD1,IC12A
      CALL WRITEO(OTAPE,IC11)
      RETURN
   50 IEND=1
      GO TO 70
   60 IEND=2
   70 LB2=LB2-1
      IF(LB2.GT.0) CALL INSERT
      IF(IEND.GT.0) GO TO 80
      LB1=LB1+1
      GO TO 90
   80 IF(IEND.EQ.2) GO TO 130
C-----HAS ENTIRE LINE BEEN SCANNED.
      IF(LB1.GE.LTOP) GO TO 100
C-----NO. FIND NEXT NON-BLANK CHARACTER.
   90 CALL SKIPR
      IF(LB1.LT.LTOP) GO TO 10
C-----ENTIRE LINE SCANNED. OUTPUT IT AND READ NEXT LINE.
  100 CALL WRITEO(OTAPE,IC11)
      CALL READX(ISCR,IC12A,IEND)
      IF(IEND.LT.0) GO TO 110
C-----IF NEXT LINE IS NOT A CONTINUATION OR COMMENT SET LINE IN CORE
C-----FLAG ON AND RETURN.
      IF(CARD1(6).NE.BLANK.AND.CARD1(1).NE.'C'.AND.CARD1(1).NE.'c')
     1 GO TO 120
      IWAY=1
      RETURN
  110 IWAY=-1
      RETURN
C-----FIND LAST NON-BLANK CHARACTER ON LINE.
  120 CALL SKIPL1
C-----SKIP LINE IF IT IS BLANK.
      IF(LTOP.LE.6) GO TO 100
      LB1=6
      IEND=0
      GO TO 90
  130 CALL WRITEO(OTAPE,IC11)
      RETURN
  140 FORMAT(1X,80A1,' (',I5,' ) Cannot Decode Repeated Labels')
      END
      SUBROUTINE DOIT
C=======================================================================
C
C     A DO LINE HAS BEEN FOUND. ONLY ONE FORM OF DO IS CONSIDERED.
C
C     DO NN
C
C     THE REFERENCE TO THE STATEMENT LABEL (NN) IS REPLACED BY A
C     REFERENCE TO A NEW STATEMENT LABEL.
C
C=======================================================================
      INCLUDE 'implicit.h'
      CHARACTER*1 ENDITX,FMTIT,BLANK,PARENL,PARENR,COMMA,CARD1
      INTEGER*4 OUTP,OTAPE
      COMMON/UNITS/INP,OUTP,ITAPE,OTAPE,ISCR
      COMMON/DRACUL/IC10,IC11,IC12A,IC12B,IBLANK,ICFMT
      COMMON/CHARAC/ENDITX(8,2),FMTIT(6,2),BLANK,PARENL,PARENR,COMMA
      COMMON/POINT/LB1,LTOP,LB2
      COMMON/IMAGEC/CARD1(80)
C-----FIND NEXT NON-BLANK CHARACTER ON LINE.
      CALL SKIPR
      IF(LB1.GE.LTOP) GO TO 20
C-----SCAN NEXT 6 CHARACTERS FOR BLANK.
      DO 10 LB2=1,6
      IF(CARD1(LB2+LB1).EQ.BLANK) GO TO 30
   10 CONTINUE
C-----CANNOT DECODE DO LABEL. NO CHANGE AND OUTPUT.
   20 WRITE(OUTP,40) CARD1,IC12A
      CALL WRITEO(OTAPE,IC11)
      RETURN
C-----INSET NEW LABEL AND OUTPUT LINE.
   30 LB2=LB2-1
      CALL INSERT
      CALL WRITEO(OTAPE,IC11)
      RETURN
   40 FORMAT(1X,80A1,' (',I5,' ) Cannot Decode DO Label')
      END
      SUBROUTINE READIT(MYWAY)
C=======================================================================
C
C     MYWAY = 1 - READ OR WRITE
C               - SAVE FORMAT NUMBER
C
C           = 2 - OPEN OR CLOSE
C
C     IN ALL CASES ALLOW .....,END=NNNNN,ERR=MMMMM)
C
C=======================================================================
      INCLUDE 'implicit.h'
      CHARACTER*1 ENDITX,FMTIT,BLANK,PARENL,PARENR,COMMA,CARD1,ENDEQ,
     1 ERREQ,FMTEQ
      INTEGER*4 OUTP,OTAPE
      COMMON/UNITS/INP,OUTP,ITAPE,OTAPE,ISCR
      COMMON/DRACUL/IC10,IC11,IC12A,IC12B,IBLANK,ICFMT
      COMMON/CHARAC/ENDITX(8,2),FMTIT(6,2),BLANK,PARENL,PARENR,COMMA
      COMMON/POINT/LB1,LTOP,LB2
      COMMON/IMAGEC/CARD1(80)
      DIMENSION ENDEQ(4,2),ERREQ(4,2),FMTEQ(4,2)
C-----DEFINE FMT=
      DATA FMTEQ/
     1 'F','M','T','=',
     2 'f','m','t','='/
C-----DEFINE END=
      DATA ENDEQ/
     1 'E','N','D','=',
     2 'e','n','d','='/
C-----DEFINE ERR=
      DATA ERREQ/
     1 'E','R','R','=',
     2 'e','r','r','='/
      MYPAREN=0
      LEVEL=0
C-----FOR READ OR WRITE SEARCH FOR FORMAT NUMBER - NOT OPEN, CLOSE.
      IPASS=1
      IF(MYWAY.EQ.2) IPASS=3
C-----SEARCH FOR RIGHT PARENTHESIS OR END=,ERR= WHICHEVER OCCURS FIRST.
      LTOPM3=LTOP
      IF(LTOPM3.GT.72) LTOPM3=72
      IF(LB1.GT.LTOPM3) GO TO 130
   10 LL=LB1-1
   20 LL=LL+1
C-----FINISHED WITH BALANCED )
      IF(CARD1(LL).EQ.PARENL) LEVEL = LEVEL + 1
      IF(CARD1(LL).EQ.PARENR) THEN
      LEVEL = LEVEL - 1
      IF(LEVEL.LE.0) GO TO 160
      ENDIF
C-----SKIP IMBEDDED BLANKS.
      IF(CARD1(LL).EQ.BLANK) GO TO 20
C-----FIRST FIELD IS ALWAYS A UNIT NUMBER - SKIP TO SECOND FIELD.
      IF(IPASS.NE.1) GO TO 30
      IF(CARD1(LL).EQ.COMMA) IPASS=2
      GO TO 20
C-----SECOND FIELD CAN BE FORMAT NUMBER, FMT=, END=, ERR=
C-----FIRST TRY FOR FMT= OR END= OR ERR=
   30 DO 40 J=1,4
      LLJ=LL+J-1
      IF(CARD1(LLJ).NE.FMTEQ(J,1).AND.CARD1(LLJ).NE.FMTEQ(J,2)) GO TO 50
   40 CONTINUE
C-----FMT= FOUND.
      GO TO 110
   50 DO 60 J=1,4
      LLJ=LL+J-1
      IF(CARD1(LLJ).NE.ENDEQ(J,1).AND.CARD1(LLJ).NE.ENDEQ(J,2)) GO TO 70
   60 CONTINUE
C-----END= FOUND.
      GO TO 110
   70 DO 80 J=1,4
      LLJ=LL+J-1
      IF(CARD1(LLJ).NE.ERREQ(J,1).AND.CARD1(LLJ).NE.ERREQ(J,2)) GO TO 90
   80 CONTINUE
C-----ERR= FOUND.
      GO TO 110
C-----NOT END= OR ERR= - IF SECOND FIELD ASSUME FORMAT NUMBER.
   90 IF(IPASS.EQ.2) GO TO 100
      IF(LL.LT.LTOPM3) GO TO 20
C-----RIGHT PARENTHESIS NOT FOUND.
      GO TO 130
C-----FORMAT NUMBER FOUND.
  100 LLJ=LL-1
C-----FMNT=,END=,ERR= FOUND. FIND FOLLOWING COMMA OR RIGHT PARENTHESIS.
  110 LB1=LLJ
      DO 120 LB2=1,7
      IF(CARD1(LB1+LB2).EQ.PARENR) GO TO 140
      IF(CARD1(LB1+LB2).EQ.COMMA) GO TO 150
  120 CONTINUE
C-----ERROR. CANNOT LOCATE RIGHT PARENTHESIS.
  130 WRITE(OUTP,170) CARD1,IC12A
      GO TO 160
C-----ENDING ) FOUND.
  140 MYPAREN=1
C-----INSERT NEW LABEL.
  150 LB2=LB2-1
      CALL INSERT
      IPASS=3
C-----CONTINUE SCAN UNTIL RIGHT PARENTHESIS FOUND.
      IF(MYPAREN.LE.0) GO TO 10
C-----OUTPUT LINE AND RETURN.
  160 CALL WRITEO(OTAPE,IC11)
      RETURN
  170 FORMAT(1X,80A1,' (',I5,' ) Cannot Find Balancing Parenthesis')
      END
      SUBROUTINE INSERT
C=======================================================================
C
C     A REFERENCE TO A STATEMENT LABEL HAS BEEN FOUND IN COLUMNS 7-72.
C     THE REFERENCE EXTENDS FROM COLUMNS LB1+1 THROUGH LB1+LB2.
C     DETERMINE THE NEW STATEMENT NUMBER AND INSERT IT. IF THE OLD AND
C     REFERENCES TO THE STATEMENT LABEL ARE NOT THE SAME NUMBER OF
C     CHARACTERS IN LENGTH SHIFT ALL FOLLOWING CHARACTERS EITHER LEFT
C     OR RIGHT TO MAKE ROOM FOR THE NEW REFERENCE.
C
C=======================================================================
      INCLUDE 'implicit.h'
      CHARACTER*1 ENDITX,FMTIT,BLANK,PARENL,PARENR,COMMA,
     1 CARD1,CARD2,IUSE
      INTEGER*4 OUTP,OTAPE
      COMMON/UNITS/INP,OUTP,ITAPE,OTAPE,ISCR
      COMMON/DRACUL/IC10,IC11,IC12A,IC12B,IBLANK,ICFMT
      COMMON/CHARAC/ENDITX(8,2),FMTIT(6,2),BLANK,PARENL,PARENR,COMMA
      COMMON/POINT/LB1,LTOP,LB2
      COMMON/IMAGEC/CARD1(80)
      COMMON/NUTABI/NTAB
      COMMON/ELPASO/IPATH
      INCLUDE 'relabel.h'
      DIMENSION IUSE(5),CARD2(80)
C-----MOVE CHARACTERS TO RIGHT ADJUSTED FORM FOR COMPARISON.
      DO 10 L=1,5
      IUSE(L)=BLANK
   10 CONTINUE
      LB3=LB2+LB1
      LL=5
      DO 20 L=1,LB2
      IUSE(LL)=CARD1(LB3)
      LB3=LB3-1
      LL=LL-1
   20 CONTINUE
C-----COMPARE TO LABEL TABLE.
      DO 70 NUSPOT=1,NTAB
      DO 30 M=1,5
      IF(IUSE(M).NE.OLDTAB(M,NUSPOT)) GO TO 70
   30 CONTINUE
C-----OLD LABEL FOUND. DURING FIRST PASS JUST COUNT THE NUMBER OF
C-----TIMES EACH STATEMENT LABEL IS REFERENCED.
      IF(IPATH.EQ.2) GO TO 40
      IMUSED(NUSPOT)=IMUSED(NUSPOT)+1
      GO TO 60
C-----IF STATEMENT LABEL IS NOT REFERENCED PRINT ERROR AND DO NOT
C-----REPLACE.
   40 IF(IMUSED(NUSPOT).LE.0) GO TO 80
C-----IF OLD AND NEW LABEL ARE IDENTICAL THERE IS NOTHING TO DO.
      DO 50 M=1,5
      IF(IUSE(M).NE.NEWTAB(M,NUSPOT)) GO TO 90
   50 CONTINUE
C-----OLD AND NEW LABELS ARE THE SAME. ADVANCE POINTER PAST LABEL AND
C-----RETURN.
   60 LB1=LB1+LB2
      RETURN
   70 CONTINUE
   80 WRITE(OUTP,240) CARD1,IC12A,(IUSE(M),M=1,5)
      LB1=LB1+LB2
      RETURN
C-----DEFINE LENGTH OF NEW LABEL.
   90 DO 100 NUSTAR=1,5
      IF(NEWTAB(NUSTAR,NUSPOT).NE.BLANK) GO TO 110
  100 CONTINUE
      NUSTAR=5
C-----DEFINE NEW LABEL LENGTH.
  110 NUSIZE=6-NUSTAR
      L3=LB1+LB2+1
C-----DEFINE NUMBER OF CHARACTERS TO SHIFT COLUMNS FOLLOWING INSERT.
      NMOVE=NUSIZE-LB2
C-----SHIFT REMAINDER OF LINE LEFT OR RIGHT.
      IF(NMOVE.lt.0) go to 180
      IF(NMOVE.eq.0) go to 220
c-----------------------------------------------------------------------
C
C     SHIFT RIGHT.
C
c-----------------------------------------------------------------------
      MM=LTOP+1
C-----IF END IS BEYOND LAST BLANK THERE IS NOTHING TO DO.
      IF(L3.GT.LTOP) GO TO 220
c-----------------------------------------------------------------------
C
C     SPLIT LINE IF INSERT WILL CAUSE OVERFLOW PAST COLUMN 72.
C
c-----------------------------------------------------------------------
      NEWTOP=LTOP+NMOVE
      IF(NEWTOP.LE.72) GO TO 160
C-----SAVE LINE.
      DO 120 I=1,LTOP
      CARD2(I)=CARD1(I)
  120 CONTINUE
C-----BLANK FROM LB1 ON AND OUTPUT.
      DO 130 I=LB1,80
      CARD1(I)=' '
  130 CONTINUE
      WRITE(OUTP,260) CARD1,IC12A
      CALL WRITEO(OTAPE,IC11)
C-----BLANK AND INSERT 1 IN COLUMN 6 = CONTINUATION.
      DO 140 I=1,LB1
      CARD1(I)=' '
  140 CONTINUE
      CARD1(6)='1'
C-----COPY FROM LB1 ON STARTING IN COLUMN 8.
      KTOP=7
      DO 150 I=LB1,LTOP
      KTOP=KTOP+1
      CARD1(KTOP)=CARD2(I)
  150 CONTINUE
      WRITE(OUTP,270) CARD1,IC12A
C-----RESET INDICES.
      LB1=8
      LTOP=KTOP
      L3=LB1+LB2+1
      IF(L3.GT.LTOP) GO TO 220
  160 DO 170 MM=LTOP,L3,-1
      CARD1(MM+NMOVE)=CARD1(MM)
  170 CONTINUE
      GO TO 220
C-----IF NO FOLLOWING CHARACTERS BLANK OUT COLUMNS.
  180 IF(L3.GT.LTOP) GO TO 200
c-----------------------------------------------------------------------
C
C     SHIFT LEFT.
C
c-----------------------------------------------------------------------
      DO 190 MM=L3,LTOP
      CARD1(MM+NMOVE)=CARD1(MM)
  190 CONTINUE
C-----BLANK OUT COLUMNS SHIFTED FROM.
  200 KTOP=LTOP+NMOVE+1
      IF(KTOP.GT.LTOP) GO TO 220
      DO 210 L=KTOP,LTOP
      CARD1(L)=BLANK
  210 CONTINUE
C-----DEFINE NEW LINE LENGTH.
  220 LTOP=LTOP+NMOVE
C-----LOAD NEW LABEL.
      DO 230 L=NUSTAR,5
      LB1=LB1+1
      CARD1(LB1)=NEWTAB(L,NUSPOT)
  230 CONTINUE
C-----WRITE WARNING IF DATA EXTENDS BEYOND COLUMN 72.
      IF(LTOP.GT.72) WRITE(OUTP,250) CARD1,IC12A
      RETURN
  240 FORMAT(1X,80A1,' (',I5,' ) No Label Equivalent to ',5A1)
  250 FORMAT(1X,80A1,' (',I5,' ) Line Overflowed Columns 1-72')
  260 FORMAT(1X,80A1,' (',I5,' ) Split Line to Avoid Overflow Col. 72')
  270 FORMAT(1X,80A1,' (',i5,' ) Overflowed into Columns 1-72')
      END
      SUBROUTINE SKIPR
C=======================================================================
C
C     STARTING AT THE CURRENT COLUMN INDEX (LB1) SCAN THE LINE FROM
C     LEFT TO RIGHT AND FIND THE NEXT NON-BLANK CHARACTER.
C
C=======================================================================
      INCLUDE 'implicit.h'
      CHARACTER*1 ENDITX,FMTIT,BLANK,PARENL,PARENR,COMMA,CARD1
      COMMON/POINT/LB1,LTOP,LB2
      COMMON/IMAGEC/CARD1(80)
      COMMON/CHARAC/ENDITX(8,2),FMTIT(6,2),BLANK,PARENL,PARENR,COMMA
C-----IF CHARACTER INDEX IS ALREADY AT END OF LINE KEEP IT THERE.
      IF(LB1.GE.LTOP) GO TO 20
C-----SCAN REMAINING CHARACTERS OF LINE.
      LL=LB1+1
      DO 10 LB1=LL,LTOP
      IF(CARD1(LB1).NE.BLANK) GO TO 30
   10 CONTINUE
C-----NO MORE NON-BLANK CHARACTERS ON LINE.
   20 LB1=LTOP
      RETURN
C-----NON-BLANK FOUND. SET INDEX TO PRECEDING CHARACTER.
   30 LB1=LB1-1
      RETURN
      END
      SUBROUTINE SKIPL1
C=======================================================================
C
C     SCAN COLUMNS 72 THROUGH 6 FROM RIGHT TO LEFT AND FIND THE LAST
C     NON-BLANK CHARACTER ON THE LINE.
C
C=======================================================================
      INCLUDE 'implicit.h'
      CHARACTER*1 ENDITX,FMTIT,BLANK,PARENL,PARENR,COMMA,CARD1
      COMMON/POINT/LB1,LTOP,LB2
      COMMON/IMAGEC/CARD1(80)
      COMMON/CHARAC/ENDITX(8,2),FMTIT(6,2),BLANK,PARENL,PARENR,COMMA
C-----FIRST LAST NON-BLANK CHARACTER IN COLUMNS 7-72.
      DO 10 LTOP=80,7,-1
      IF(CARD1(LTOP).NE.BLANK) GO TO 20
   10 CONTINUE
      LTOP=6
   20 RETURN
      END
      SUBROUTINE CARDIN
C=======================================================================
C
C     READ NEXT LINE FROM SOURCE FILE. INSURE COLUMNS 73-80 ARE BLANK
C     OR CONTAIN A LEGAL LABEL. RIGHT ADJUST STATEMENT LABELS TO END
C     IN COLUMN 5. COPY LINE TO SCRATCH. PROCEED IMMEDIATELY TO NEXT
C     LINE IF CURRENT LINE IS A COMMENT LINE OR A FORMAT OR A FORMAT
C     CONTINUATION LINE.
C
C=======================================================================
      INCLUDE 'implicit.h'
      CHARACTER*1 ENDITX,FMTIT,BLANK,PARENL,PARENR,COMMA,CARD1
      INTEGER*4 OUTP,OTAPE
      COMMON/UNITS/INP,OUTP,ITAPE,OTAPE,ISCR
      COMMON/IMAGEC/CARD1(80)
      COMMON/IMAGEI/INEND
      COMMON/DRACUL/IC10,IC11,IC12A,IC12B,IBLANK,ICFMT
      COMMON/POINT/LB1,LTOP,LB2
      COMMON/CHARAC/ENDITX(8,2),FMTIT(6,2),BLANK,PARENL,PARENR,COMMA
C-----DO NOT TRY TO READ PAST END OF FILE.
      IF(INEND.GT.0) RETURN
   10 CONTINUE
C-----READ NEXT LINE AND CHECK FOR END FILE OF FILE.
   20 CALL READX(ITAPE,IC10,IEND)
      IF(IEND.LT.0) GO TO 140
C-----LIST FIRST LINE OF PROGRAM
      IF(IC10.EQ.1) WRITE(OUTP,170) CARD1
C-----COPY COMMENT CARDS.
      IF(CARD1(1).NE.'C'.AND.CARD1(1).NE.'c') GO TO 30
      CALL WRITES(ISCR)
      GO TO 10
C-----IS THERE A STATEMENT LABEL ON THE LINE (COLUMNS 1-5).
   30 DO 40 M=1,5
      IF(CARD1(M).NE.BLANK) GO TO 50
   40 CONTINUE
C-----NO.
      GO TO 90
C-----YES. LABELLED LINE CANNOT BE CONTINUATION LINE.
   50 IF(CARD1(6).EQ.BLANK) GO TO 60
      WRITE(OUTP,160) CARD1,IC10
      CALL WRITES(ISCR)
      GO TO 10
C-----RIGHT ADJUST ALL STATEMENT LABELS.
   60 DO 80 M=1,4
      IF(CARD1(5).NE.BLANK) GO TO 90
      JJ=4
      DO 70 J=1,4
      CARD1(JJ+1)=CARD1(JJ)
      JJ=JJ-1
   70 CONTINUE
      CARD1(1)=BLANK
   80 CONTINUE
C-----FIND LAST NON-BLANK CHARACTER IN COLUMNS 7-72.
   90 CALL SKIPL1
C-----DELETE ANY LINE THAT IS COMPLETELY BLANK.
      IF(LTOP.GT.6) GO TO 100
      WRITE(OUTP,180) CARD1,IC10
      IC10=IC10-1
      IBLANK=IBLANK+1
      GO TO 20
C-----FIND FIRST NON-BLANK CHARACTER IN COLUMNS 7-72.
  100 LB1=6
      CALL SKIPR
      IF(LB1.GE.LTOP) GO TO 20
C-----LEFT ADJUST CARDS TO START IN COLUMN 7 (DO NOT LEFT ADJUST
C-----CONTINUATION LINES).
      IF(CARD1(6).NE.BLANK) GO TO 130
      MM=6
      ISHS=LB1-MM
      IF(ISHS.LE.0) GO TO 130
      DO 110 L=LB1,LTOP
      CARD1(L-ISHS)=CARD1(L)
  110 CONTINUE
      LLTOP=LTOP-ISHS+1
      DO 120 L=LLTOP,LTOP
      CARD1(L)=BLANK
  120 CONTINUE
      LB1=MM
      LTOP=LTOP-ISHS
  130 CALL WRITES(ISCR)
      GO TO 150
C-----END OF FILE WHILE READING CARDS.
  140 INEND=1
  150 RETURN
  160 FORMAT(1X,80A1,' (',I5,' ) Line Labelled into Column 6')
  170 FORMAT(/1X,80A1/1X,79('-'))
  180 FORMAT(1X,80A1,' (',I5,' ) Blank Line Deleted')
      END
      SUBROUTINE READX(IUNIT,IC,IEND)
C=======================================================================
C
C     READ NEXT LINE (CARD1), INCREMENT COUNT COUNT (IC), SET END OF
C     FILE FLAG (-1 = END OF FILE, 1 = NOT).
C
C=======================================================================
      INCLUDE 'implicit.h'
      CHARACTER*1 CARD1
      COMMON/IMAGEC/CARD1(80)
      COMMON/POINT/LB1,LTOP,LB2
      READ(IUNIT,20,END=10) CARD1
      IC=IC+1
C-----DEFINE LINE LENGTH.
      LB1=6
      CALL SKIPL1
      IEND=1
      RETURN
   10 IEND=-1
      RETURN
   20 FORMAT(80A1)
      END
      SUBROUTINE WRITEO(IUNIT,IC)
C=======================================================================
C
C     WRITE NEXT LINE AND INCREMENT COUNT COUNT
C
C     ONLY OUTPUT MINIMUM NON-BLANK LINE LENGTH.
C
C     NO LONGER OUTPUT SEQUENCE NUMBER.
C
C=======================================================================
      INCLUDE 'implicit.h'
      CHARACTER*1 CARD1
      COMMON/IMAGEC/CARD1(80)
C-----SKIP IF OUTPUT UNIT IS NOT POSITIVE.
      IF(IUNIT.LE.0) GO TO 30
C-----DEFINE NON-BLANK LINE LENGTH.
      DO 10 I=80,1,-1
      IF(CARD1(I).NE.' ') GO TO 20
   10 CONTINUE
C-----OUTPUT AT LEAST 1 CHARACTER.
      I=1
   20 WRITE(IUNIT,40) (CARD1(K),K=1,I)
      IC=IC+1
   30 RETURN
   40 FORMAT(80A1)
      END
      SUBROUTINE WRITES(IUNIT)
C=======================================================================
C
C     WRITE NEXT LINE (CARD1).
C
C=======================================================================
      INCLUDE 'implicit.h'
      CHARACTER*1 CARD1
      COMMON/IMAGEC/CARD1(80)
      IF(IUNIT.GT.0) WRITE(IUNIT,10) CARD1
      RETURN
   10 FORMAT(80A1)
      END
      SUBROUTINE SAMEKEY(LB1,CARD1,KEYWORD,NKEY,IMOK)
C=======================================================================
C
C     COMPARE A CHARACTER STRING (CARD1) TO A KEYWORD NKEY CHARACTERS
C     IN LENGTH.
C
C     MATCH WILL BE ON ANY COMBINATION OF UPPER AND LOWER CASE
C     CHARACTERS.
C
C=======================================================================
      INCLUDE 'implicit.h'
      CHARACTER*1 CARD1,KEYWORD
      DIMENSION CARD1(80),KEYWORD(NKEY,2)
C-----START SEARCH AT LB1
      LB4=LB1-1
C-----LOOP OVER CHARACTERS.
      DO 20 L=1,NKEY
C-----INCREMENT CHARACTER INDEX.
   10 LB4=LB4+1
C-----NO MATCH IF PAST END OF LINE.
      IF(LB4.GT.72) GO TO 30
C-----MATCH IF SAME UPPER CASE.
      IF(CARD1(LB4).EQ.KEYWORD(L,1)) GO TO 20
C-----MATCH IF SAME LOWER CASE.
      IF(CARD1(LB4).EQ.KEYWORD(L,2)) GO TO 20
C-----TRY NEXT CHARACTER IF CURRENT ONE IS BLANK.
      IF(CARD1(LB4).EQ.' ') GO TO 10
C-----NO MATCH.
      GO TO 30
   20 CONTINUE
C-----MATCH.
      IMOK=1
      RETURN
C-----NO MATCH.
   30 IMOK=0
      RETURN
      END
      SUBROUTINE IMSAME(LB1,CARD1,NTRY,IMOK)
C=======================================================================
C
C     COMPARE A CHARACTER STRING (CARD1) TO A KEYWORD
C
C     MATCH WILL BE ON ANY COMBINATION OF UPPER AND LOWER CASE
C     CHARACTERS.
C
C=======================================================================
      INCLUDE 'implicit.h'
      CHARACTER*1 CARD1,SPECAL
      COMMON/PATHC/SPECAL(6,8,2)
      COMMON/PATHI/NLENG(8)
      DIMENSION CARD1(80)
C-----START SEARCH AT LB1
      LB4=LB1
C-----DEFINE LENGTH OF KEYWORD.
      NEED=NLENG(NTRY)
C-----LOOP OVER CHARACTERS.
      DO 20 L=1,NEED
C-----INCREMENT CHARACTER INDEX.
   10 LB4=LB4+1
C-----NO MATCH IF PAST END OF LINE.
      IF(LB4.GT.72) GO TO 30
C-----MATCH IF SAME UPPER CASE.
      IF(CARD1(LB4).EQ.SPECAL(L,NTRY,1)) GO TO 20
C-----MATCH IF SAME LOWER CASE.
      IF(CARD1(LB4).EQ.SPECAL(L,NTRY,2)) GO TO 20
C-----TRY NEXT CHARACTER IF CURRENT ONE IS BLANK.
      IF(CARD1(LB4).EQ.' ') GO TO 10
C-----NO MATCH.
      GO TO 30
   20 CONTINUE
C-----MATCH.
      IMOK=1
      LB1=LB4
      RETURN
C-----NO MATCH.
   30 IMOK=0
      RETURN
      END
      SUBROUTINE BLOCKX
C=======================================================================
C
C     FOR IBM COMPATABILITY LOAD ALL LABELLED COMMON IN BLOCKX DATA
C     ROUTINE.
C
C=======================================================================
      INCLUDE 'implicit.h'
      CHARACTER*1 ENDITX,FMTIT,BLANK,PARENL,PARENR,COMMA,
     1 SPECAL,ENDX,FMTX,BLANKX,PARLX,PARRX,COMMAX,SPECX
      COMMON/CHARAC/ENDITX(8,2),FMTIT(6,2),BLANK,PARENL,PARENR,COMMA
      COMMON/PATHC/SPECAL(6,8,2)
      COMMON/PATHI/NLENG(8)
      DIMENSION ENDX(8,2),FMTX(6,2),SPECX(6,8,2),NLENGX(8)
      DATA ENDX/
     1 'E','N','D',' ',' ',' ',' ',' ',
     1 'e','n','d',' ',' ',' ',' ',' '/
      DATA FMTX/
     1 'F','O','R','M','A','T',
     1 'f','o','r','m','a','t'/
      DATA BLANKX/' '/
      DATA PARLX/'('/
      DATA PARRX/')'/
      DATA COMMAX/','/
      DATA NLENGX/5,4,3,3,5,5,6,6/
      DATA SPECX/
     1 'G','O',' ','T','O',' ',
     2 'G','O','T','O',' ',' ',
     3 'I','F','(',' ',' ',' ',
     4 'D','O',' ',' ',' ',' ',
     5 'R','E','A','D','(',' ',
     6 'O','P','E','N','(',' ',
     7 'W','R','I','T','E','(',
     8 'C','L','O','S','E','(',
     1 'g','o',' ','t','o',' ',
     2 'g','o','t','o',' ',' ',
     3 'i','f','(',' ',' ',' ',
     4 'd','o',' ',' ',' ',' ',
     5 'r','e','a','d','(',' ',
     6 'o','p','e','n','(',' ',
     7 'w','r','i','t','e','(',
     8 'c','l','o','s','e','('/
      DO 20 K=1,2
      DO 10 I=1,8
      ENDITX(I,K)=ENDX(I,K)
   10 CONTINUE
   20 CONTINUE
      DO 40 K=1,2
      DO 30 I=1,6
      FMTIT(I,K)=FMTX(I,K)
   30 CONTINUE
   40 CONTINUE
      BLANK=BLANKX
      PARENL=PARLX
      PARENR=PARRX
      COMMA=COMMAX
      DO 70 I=1,8
      NLENG(I)=NLENGX(I)
      DO 60 K=1,2
      DO 50 J=1,6
      SPECAL(J,I,K)=SPECX(J,I,K)
   50 CONTINUE
   60 CONTINUE
   70 CONTINUE
      RETURN
      END
      SUBROUTINE FILIO1
C=======================================================================
C
C     DEFINE I/O UNITS AND OPTIONALLY DEFINE FILE NAMES.
C
C=======================================================================
      INCLUDE 'implicit.h'
      INTEGER*4 OUTP,OTAPE
      CHARACTER*72 NAMEIN,NAMEOUT
      COMMON/UNITS/INP,OUTP,ITAPE,OTAPE,ISCR
      COMMON/IOSTATUS/ISTAT1,ISTAT2
      COMMON/NAMEX/NAMEIN,NAMEOUT
C-----DEFINE ALL I/O UNITS.
      INP=2
      OUTP=3
      ITAPE=10
      OTAPE=11
      ISCR=12
C-----DEFINE FILE NAMES.
      OPEN(OUTP,FILE='RELABEL.LST',STATUS='UNKNOWN')
      OPEN(INP,FILE='RELABEL.INP',STATUS='OLD',ERR=10)
      ISTAT1 = 0
      RETURN
   10 ISTAT1 = 1
      RETURN
      ENTRY FILIO2
c-----------------------------------------------------------------------
C
C     OPEN PROGRAM FILES.
C
c-----------------------------------------------------------------------
C-----OPTIONALLY DEFINE PROGRAM FILENAMES.
      OPEN(ITAPE,FILE=NAMEIN,STATUS='OLD',ERR=20)
      ISTAT2 = 0
      OPEN(ISCR,FILE='RELABEL.001',STATUS='UNKNOWN')
      OPEN(OTAPE,FILE=NAMEOUT,STATUS='UNKNOWN')
      RETURN
   20 ISTAT2 = 1
      RETURN
      END
