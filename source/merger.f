C This file is part of PREPRO.
C
C    Author: Dermott (Red) Cullen
C Copyright: (C) International Atomic Energy Agency
C
C PREPRO is free software; you can redistribute it and/or modify it
C under the terms of the MIT License; see LICENSE file for more details.


C=======================================================================
C
C     PROGRAM MERGER
C     ==============
C     VERSION 80-1 (JANUARY 1980)
C     VERSION 80-2 (DECEMBER 1980)
C     VERSION 82-1 (JANUARY 1982)
C     VERSION 83-1 (JANUARY 1983)*NEW, MORE COMPATIBLE I/O UNIT NUMBERS.
C     VERSION 85-1 (AUGUST 1985) *FORTRAN-77/H VERSION
C     VERSION 86-1 (JANUARY 1986)*ENDF/B-VI FORMATS
C     VERSION 88-1 (JULY 1988)   *OPTION...INTERNALLY DEFINE ALL I/O
C                                 FILE NAMES (SEE, SUBROUTINES FILIO1
C                                 AND FILIO2 FOR DETAILS).
C                                *IMPROVED BASED ON USER COMMENTS.
C     VERSION 89-1 (JANUARY 1989)*PSYCHOANALYZED BY PROGRAM FREUD TO
C                                 INSURE PROGRAM WILL NOT DO ANYTHING
C                                 CRAZY.
C                                *UPDATED TO USE NEW PROGRAM CONVERT
C                                 KEYWORDS.
C                                *ADDED LIVERMORE CIVIC COMPILER
C                                 CONVENTIONS.
C     VERSION 92-1 (JANUARY 1992)*UPDATED BASED ON USER COMMENTS
C                                *ADDED FORTRAN SAVE OPTION
C     VERSION 92-2 (JULY 1992)   *ALLOW UP TO 99 ENDF/B DATA FILES.
C                                 (TO ALLOW MANAGEMENT OF THE ENTIRE
C                                  ENDF/B SYSTEM).
C     VERSION 94-1 (JANUARY 1994)*VARIABLE ENDF/B DATA FILENAMES
C                                 TO ALLOW ACCESS TO FILE STRUCTURES
C                                 (WARNING - INPUT PARAMETER FORMAT
C                                 HAS BEEN CHANGED)
C                                *ONLY SPECIFY FILENAMES - NO UNIT
C                                 NUMBERS ON INPUT (WARNING - INPUT
C                                 PARAMETERS FORMAT HAS BEEN CHANGED)
C                                *CLOSE ALL FILES BEFORE TERMINATING
C                                 (SEE, SUBROUTINE ENDIT)
C                                *REQUEST LOG DELETED
C     VERSION 96-1 (JANUARY 1996) *COMPLETE RE-WRITE
C                                 *IMPROVED COMPUTER INDEPENDENCE
C                                 *ALL DOUBLE PRECISION
C                                 *ON SCREEN OUTPUT
C                                 *UNIFORM TREATMENT OF ENDF/B I/O
C                                 *IMPROVED OUTPUT PRECISION
C     VERSION 99-1 (MARCH 1999)   *GENERAL IMPROVEMENTS BASED ON
C                                  USER FEEDBACK
C     VERS. 2000-1 (FEBRUARY 2000)*GENERAL IMPROVEMENTS BASED ON
C                                  USER FEEDBACK
C     VERS. 2002-1 (MAY 2002)     *OPTIONAL INPUT PARAMETERS
C     VERS. 2004-1 (MARCH 2004)   *ADDED INCLUDE TO DEFINE COMMON
C                                 *ADDED TEND LINE IF NO DATA RETRIEVED
C     VERS. 2007-1 (JAN.  2007)   *CHECKED AGAINST ALL ENDF/B-VII.
C     VERS. 2007-2 (JUNE  2007)   *UP, TO 1,000 ENDF/B FILES.
C                                 *72 CHARACTER FILE NAMES.
C     VERS. 2010-1 (Apr.  2010)   *General update based on user feedback
C     VERS. 2012-1 (Aug.  2012)   *Added CODENAME
C                                 *32 and 64 bit Compatible
C                                 *Added ERROR stop
C     VERS. 2015-1 (Jan.  2015)   *Replaced ALL 3 way IF Statements.
C     VERS. 2017-1 (May   2017)   *Updated based on user feedbck.
C     VERS. 2018-1 (Jan.  2018)   *Added on-line output for ALL ENDERROR
C     VERS. 2019-1 (June  2019)   *Identical to 2018-1
C
C     OWNED, MAINTAINED AND DISTRIBUTED BY
C     ------------------------------------
C     THE NUCLEAR DATA SECTION
C     INTERNATIONAL ATOMIC ENERGY AGENCY
C     P.O. BOX 100
C     A-1400, VIENNA, AUSTRIA
C     EUROPE
C
C     ORIGINALLY WRITTEN BY
C     ------------------------------------
C     Dermott E. Cullen
C
C     PRESENT CONTACT INFORMATION
C     ---------------------------
C     Dermott E. Cullen
C     1466 Hudson Way
C     Livermore, CA 94550
C     U.S.A.
C     Telephone  925-443-1911
C     E. Mail    RedCullen1@Comcast.net
C     Website    RedCullen1.net/HOMEPAGE.NEW
C
C     AUTHORS MESSAGE
C     ---------------
C     THE COMMENTS BELOW SHOULD BE CONSIDERED THE LATEST DOCUMENTATION
C     FOR THIS PROGRAM INCLUDING ALL RECENT IMPROVEMENTS. PLEASE READ
C     ALL OF THESE COMMENTS BEFORE IMPLEMENTATION, PARTICULARLY THE
C     COMMENTS CONCERNING MACHINE DEPENDENT CODING.
C
C     AT THE PRESENT TIME WE ARE ATTEMPTING TO DEVELOP A SET OF COMPUTER
C     INDEPENDENT PROGRAMS THAT CAN EASILY BE IMPLEMENTED ON ANY ONE
C     OF A WIDE VARIETY OF COMPUTERS. IN ORDER TO ASSIST IN THIS PROJECT
C     IT WOULD BE APPECIATED IF YOU WOULD NOTIFY THE AUTHOR OF ANY
C     COMPILER DIAGNOSTICS, OPERATING PROBLEMS OR SUGGESTIONS ON HOW TO
C     IMPROVE THIS PROGRAM. HOPEFULLY, IN THIS WAY FUTURE VERSIONS OF
C     THIS PROGRAM WILL BE COMPLETELY COMPATIBLE FOR USE ON YOUR
C     COMPUTER.
C
C     PURPOSE
C     -------
C     THIS PROGRAM IS DESIGNED TO SELECTIVELY RETRIEVE DATA OFF OF FROM
C     1 TO 10 ENDF/B DATA TAPES AND TO MERGE THE SELECTED DATA INTO A
C     SINGLE MAT/MF/MT ORDERED FINAL OUTPUT FILE.
C
C     IN THE DISCUSSION THAT FOLLOWS FOR SIMPLICITY THE ENDF/B
C     TERMINOLOGY---ENDF/B TAPE---WILL BE USED. IN FACT THE ACTUAL
C     MEDIUM USED MAY BE TAPE, CARD, DISK OR ANY OTHER MEDIUM.
C
C     ENDF/B FORMAT
C     -------------
C     THIS PROGRAM ONLY USES THE ENDF/B BCD OR CARD IMAGE FORMAT (AS
C     OPPOSED TO THE BINARY FORMAT) AND CAN HANDLE DATA IN ANY VERSION
C     OF THE ENDF/B FORMAT (I.E., ENDF/B-I, II,III, IV OR V FORMAT).
C
C     THE ONLY NUMERICAL DATA THAT THIS PROGRAM READS IS THE ZA FROM THE
C     FIRST CARD OF EACH SECTION AND THE MAT/MF/MT FROM EACH CARD.
C     SEQUENCE NUMBERS ARE IGNORED ON INPUT AND ALL OTHER FIELDS ARE
C     READ AS HOLLERITH. AS SUCH THIS PROGRAM NEED NOT DISTINGUISH
C     BETWEEN DIFFERENT VERSIONS OF THE ENDF/B FORMAT.
C
C     IT IS ASSUMED THAT THE DATA IS CORRECTLY CODED IN THE ENDF/B
C     FORMAT AND NO ERROR CHECKING IS PERFORMED. IN PARTICULAR IT IS
C     ASSUMED THAT THE MAT, MF AND MT ON EACH CARD IS CORRECT. SEQUENCE
C     NUMBERS (COLUMNS 76-80) ARE IGNORED ON INPUT, BUT WILL BE
C     CORRECTLY OUTPUT ON ALL CARDS.
C
C     SECTION SIZE
C     ------------
C     SINCE THIS PROGRAM ONLY READS THE DATA ONE CARD AT A TIME THERE
C     IS NO LIMIT TO THE SIZE OF ANY GIVEN SECTION, E.G. THE TOTAL
C     CROSS SECTION MAY BE DESCRIBED BY 200,000 DATA POINTS.
C
C     SELECTION OF DATA
C     -----------------
C     THE USER MAY CHOOSE TO MERGE ALL DATA OR THE USER MAY SPECIFY
C     THAT ONLY CERTAIN DATA SHOULD BE SELECTED. THE DATA TO BE
C     SELECTED IS DEFINED BY SPECIFYING UP TO 100 MAT/MF/MT OR
C     ZA/MF/MT RANGES. EACH RANGE IS DEFINED BY LOWER AND UPPER LIMITS
C     OF MAT/MF/MT OR ZA/MF/MT.
C
C     REQUEST LIMITS
C     --------------
C     IN ORDER TO SIMPLIFY THE INPUT OF SELECTION REQUESTS THE FOLLOWING
C     CONVENTIONS HAVE BEEN INTRODUCED IN ORDER TO DEFINE THE UPPER
C     LIMITS OF REQUESTS IF THEY ARE NOT DEFINED BY INPUT (I.E., IF THEY
C     ARE ZERO).
C
C     (1) MAT OR ZA - IF THE UPPER LIMIT IS ZERO IT IS SET EQUAL TO THE
C                     LOWER LIMIT.
C     (2) MF OR MT  - IF THE UPPER LIMIT IS ZERO IT IS SET EQUAL TO THE
C                     MAXIMUM POSSIBLE VALUE, 99 OR 999 RESPECTIVELY.
C
C     WITH THESE CONVENTIONS AN ENTIRE EVALUATION MAY BE SELECTED BY
C     MERELY SPECIFYING THE LOWER LIMIT OF MAT OR ZA. THE UPPER MAT OR
C     ZA LIMIT WILL BE SET EQUAL TO THE LOWER LIMIT, THE LOWER LIMITS OF
C     MF/MT WILL BE 0/0 AND THE UPPER LIMITS OF MF/MT WILL BE SET TO
C     99/999. THIS WILL CAUSE ALL SECTIONS OF A SINGLE EVALUATION TO BE
C     SELECTED.
C
C     SATISFYING SELECTION CRITERIA
C     -----------------------------
C     IN ORDER FOR A SECTION TO MEET THE SELECTION CRITERIA SPECIFIED
C     BY ONE OF THE RETRIEVAL REQUESTS, EACH OF THE THREE FIELDS (
C     MAT/MF/MT OR ZA/MF/MT) MUST INDIVIDUALLY SATISFY THE CORRESPONDING
C     LIMITS OF THE REQUEST. IT IS NOT SUFFICIENT THAT THE MAT OF A
C     SECTION LIE BETWEEN THE MINIMUM AND MAXIMUM MATS OF A REQUEST. THE
C     MF AND MT WILL ALSO BE INDIVIDUALLY COMPARED TO THE MF AND MT
C     LIMITS OF THE REQUEST. FOR EXAMPLE, A SECTION WITH MAT/MF/MT=
C     2500/3/2 DOES NOT SATISFY A REQUEST THAT SPECIFIES A REQUEST USING
C     THE RANGE 2000/3/1 THROUGH 3000/3/1. THIS REQUEST SPECIFIES ALL
C     MATERIALS WITH MAT BETWEEN 2000 AND 3000, BUT ONLY THOSE SECTIONS
C     WITH MF/MT=3/1. SIMILARLY A REQUEST FOR 2000/3/1 THROUGH 3000/99/
C     999 WILL NOT SELECT ANY SECTIONS WITH MF=1 OR 2, SINCE THE
C     REQUEST SPECIFIES ALL MATERIALS WITH MAT BETWEEN 2000 AND 3000,
C     BUT ONLY THOSE SECTIONS WITH MF= 3, OR MORE.
C
C     DUPLICATE SECTIONS
C     ------------------
C     IF TWO OR MORE SECTIONS WITH THE SAME MAT/MF/MT ARE FOUND EITHER
C     ON THE SAME OR DIFFERENT TAPES, THE SECTION FROM THE TAPE DEFINED
C     EARLIEST IN THE INPUT CARDS WILL BE COPIED TO THE FINAL TAPE AND
C     ALL OTHER SECTIONS WITH THE SAME MAT/MF/MT WILL BE SKIPPED. THE
C     OUTPUT REPORT WILL INDICATE WHICH SECTIONS WERE COPIED FROM WHICH
C     TAPES, AS WELL AS WHICH SECTIONS ARE DUPLICATE AND WERE SKIPPED.
C
C     REACTION INDEX
C     --------------
C     THIS PROGRAM DOES NOT UPDATE THE REACTION INDEX IN MF=1, MT=451.
C     FOR EACH MATERIAL THE PROGRAM WILL FOLLOW THE CONVENTIONS
C     DEFINED ABOVE AND ONLY COPY ONE SECTION MF=1, MT=451 AND SKIP
C     ALL OTHERS (IF MORE THAN ONE). THIS CONVENTION HAS BEEN ADOPTED
C     BECAUSE MOST USERS DO NOT REQUIRE A CORRECT REACTION INDEX FOR
C     THERE APPLICATIONS AND IT WAS NOT CONSIDERED WORTHWHILE TO INCLUDE
C     THE OVERHEAD OF CONSTRUCTING A CORRECT REACTION INDEX IN THIS
C     PROGRAM. HOWEVER, IF YOU REQUIRE A REACTION INDEX FOR YOUR
C     APPLICATION AFTER RUNNING THIS PROGRAM YOU MAY USE PROGRAM
C     DICTIN TO CREATE ONE.
C
C     RETRIEVAL STATISTICS
C     --------------------
C     THERE WILL ALWAYS BE AN OUTPUT REPORT LISTING INDICATING WHICH
C     SECTIONS WHERE SELECTED, WHICH DUPLICATE SECTIONS WERE SKIPPED,
C     WHICH TAPE THE SECTION WAS ON, WHICH REQUEST (MAT/MF/MT OR
C     ZA/MF/MT RANGE) CAUSED THE SECTION TO BE SELECTED AND HOW MANY
C     CARDS WERE IN THE SECTION. IN ADDITION THE USER MAY OPTIONALLY
C     OBTAIN A FILE CONTAINING THE SAME INFORMATION. THIS FILE MAY BE
C     COMBINED WITH OTHER SIMILAR FILES OUTPUT BY THIS PROGRAM IN ORDER
C     TO ACCUMULATE RETRIEVAL STATISTICS OVER A PERIOD OF TIME. IF
C     SPECIFIED THIS FILE WILL CONTAIN THE FOLLOWING INFORMATION IN
C     6I7 FORMAT.
C
C     (1) ZA
C     (2) MAT
C     (3) MF
C     (4) MT
C     (5) NUMBER OF CARDS IN SECTION
C     (6) REQUEST NUMBER THAT CAUSED SECTION TO BE SELECTED
C
C     INPUT FILES
C     -----------
C     UNIT  DESCRIPTION
C     ----  -----------
C       2   INPUT CARDS (BCD - 80 CHARACTERS/RECORD)
C     VARY  FROM 1 TO 99 ENDF/B DATA FILES (BCD - 80 CHARACTERS/RECORD)
C
C     OUTPUT FILES
C     ------------
C     UNIT  DESCRIPTION
C     ----  -----------
C       3   OUTPUT REPORT LISTING (BCD - 120 CHARACTERS/RECORD)
C      10   MERGED ENDF/B DATA (BCD - 80 CHARACTERS/RECORD)
C
C     OPTIONAL STANDARD FILE NAMES (SEE SUBROUTINES FILIO1 AND FILIO2)
C     ----------------------------------------------------------------
C     UNIT  FILE NAME   DESCRIPTION
C     ----  ----------  -----------
C       2   MERGER.INP  INPUT PARAMETERS
C       3   MERGER.LST  OUTPUT LISTING
C      11   ENDFB.OUT   RETRIEVED ENDF/B DATA
C      12   ENDFB.IN1   ENDF/B DATA TO READ...FILENAMES WILL BE DEFINED
C      13   ENDFB.IN2   IN THE ORDER ENDFB.IN1, ENDFB.IN2,...ENDFB.I99
C      14   ENDFB.IN3   CORRESPONDING TO THE FIRST, SECOND,...99-TH
C      15   ENDFB.IN4   ENDF/B DATA FILE TO READ.
C      16   ENDFB.IN5
C      17   ENDFB.IN6
C      18   ENDFB.IN7
C             .
C             .
C     110   ENDFB.I99
C
C      INPUT CARDS
C      -----------
C      CARD  COLUMNS  FORMAT  DESCRIPTION
C      ----  -------  ------  -----------
C        1     1-72    A72    FILENAME FOR MERGED OUTPUT.
C                             (LEAVE BLANK FOR STANDARD = ENDFB.OUT)
C        2     1-66  16A4,A2  MERGED FILE LABEL
C                             IF BLANK - LABEL FROM FIRST FILE READ WILL
C                             BE OUTPUT
C             67-70    I4     MERGED FILE ENDF/B NUMBER
C                             IF ZERO - NUMBER OF FIRST FILE READ WILL
C                             BE OUTPUT.
C             71-72    I2     RETRIEVAL CRITERIA
C                             = 0 - MAT/MF/MT RANGES
C                             = 1 - ZA/MF/MT RANGES
C      3-N     1-72    A72    FILENAME FOR FILE TO RETRIEVE DATA FROM
C                             (LEAVE BLANK FOR STANDARD..ENDFB.IN1,ETC.)
C                             TERMINATE LIST OF FILES WITH A LINE THAT
C                             SAYS END OR end
C      VARY    1- 6    I6     LOWER PRIMARY LIMIT (MAT OR ZA)
C              7- 8    I2     LOWER MF LIMIT
C              9-11    I3     LOWER MT LIMIT
C             12-17    I6     UPPER PRIMARY LIMIT (MAT OR ZA)
C             18-19    I2     UPPER MF LIMIT
C             20-22    I3     UPPER MT LIMIT
C                             RANGES OF MAT/MF/MT OR ZA/MF/MT TO BE
C                             RETRIEVED ARE SPECIFIED BY DEFINING
C                             ONE RANGE (LOWER AND UPPER LIMITS) PER
C                             CARD. THE USER MAY SPECIFY 0 TO 100
C                             RANGES AND THE LIST OF REQUEST RANGES
C                             IS TERMINATED BY A BLANK CARD. IF
C                             THE FIRST CARD IS BLANK (0 REQUESTS)
C                             ALL DATA WILL BE RETRIEVED. IF THE UPPER
C                             PRIMARY CRITERIA (MAT OR ZA) IS LESS THAN
C                             THE LOWER PRIMARY CRITERIA, THE UPPER
C                             PRIMARY CRITERIA WILL BE SET EQUAL TO
C                             THE LOWER PRIMARY CRITERIA. IF THE UPPER
C                             MF OR MT LIMIT IS ZERO, OR BLANK, IT
C                             WILL BE SET TO THE MAXIMUM POSSIBLE
C                             VALUE, I.E. MF=99 OR MT=999 (SEE
C                             EXAMPLE INPUT).
C
C      EXAMPLE INPUT NO. 1
C      -------------------
C      MERGE ENDF/B DATA ONTO UNIT 10 FROM UNITS 11, 12, 13 AND 14.
C      RETRIEVE DATA BY MAT NUMBER. RETRIEVE MATS 1103, 1106, ALL MATS
C      BETWEEN 1204 AND 1215, MF=1, 3, 4 AND 5 OF MAT 1219 AND MF=3,
C      MT=1 OF MAT 1304. USE STANDARD FILENAMES.
C
C      THE FOLLOWING 13 INPUT CARDS ARE REQUIRED.
C
C     ENDFB.OUT
C     EXAMPLE FILE LABEL FOR MERGER                                  0 0
C     ENDFB.IN1
C     ENDFB.IN2
C     ENDFB.IN3
C     ENDFB.IN4
C     END
C       1103                      4317  (UPPER LIMIT SET TO 1103/99/999)
C       1106                      4317  (UPPER LIMIT SET TO 1106/99/999)
C       1204       1215           4317  (UPPER LIMIT SET TO 1215/99/999)
C       1219 1     1219 1         4317  (UPPER LIMIT SET TO 1219/ 1/999)
C       1219 3     1219 5         4317  (UPPER LIMIT SET TO 1219/ 5/999)
C       1304 3  1  1304 3  1      4317  (UPPER LIMIT COMPLETELY DEFINED)
C                                       (BLANK CARD TERMINATES REQUESTS)
C
C      EXAMPLE INPUT NO. 2
C      -------------------
C      THE SAME AS EXAMPLE 1, EXCEPT SPECIFY FILENAMES
C
C     \ENDFB6\MERGED.LIB
C     EXAMPLE FILE LABEL FOR MERGER                                  0 0
C     ENDFB6.PART1
C     ENDFB6.PART2
C     ENDFB6.PART3
C     ENDFB6.PART4
C     END
C       1103                      4317  (UPPER LIMIT SET TO 1103/99/999)
C       1106                      4317  (UPPER LIMIT SET TO 1106/99/999)
C       1204       1215           4317  (UPPER LIMIT SET TO 1215/99/999)
C       1219 1     1219 1         4317  (UPPER LIMIT SET TO 1219/ 1/999)
C       1219 3     1219 5         4317  (UPPER LIMIT SET TO 1219/ 5/999)
C       1304 3  1  1304 3  1      4317  (UPPER LIMIT COMPLETELY DEFINED)
C                                       (BLANK CARD TERMINATES REQUESTS)
C
C=======================================================================
      INCLUDE 'implicit.h'
C-----08/08/2012 DEFINE CODE NAME
      CHARACTER*8 CODENAME
      COMMON/NAMECODE/CODENAME
      CHARACTER*60 ENDIN(2),FILE1
      CHARACTER*4 MESSY,ICARD,KCARD,BLANK
      INTEGER*4 OTAPE,OUTP,ZERO,TAPCRD
      COMMON/ENDFIO/INP,OUTP,OTAPE,NUNIT
      COMMON/IOSTATUS/ISTAT1,ISTAT2
      INCLUDE 'merger.h'
      DIMENSION MESSY(2),KCARD(17),ICARD(17,100),NCARD(3,100)
      DATA ENDIN/
     1 'END                  ',
     2 'end                  '/
      DATA FILE1/
     1 'ENDFB.OUT            '/
C-----DEFINE MESSAGE TO DESCRIBE RETIREVAL CRITERIA.
C-----INITIALIZE LAST MAT/MF/MT.
      DATA MAT/0/
      DATA MF/0/
      DATA MT/0/
      DATA MESSY/' MAT','  ZA'/
      DATA BLANK/'    '/
C-----DEFINE ZERO FOR USE IN MAT, MF, MT AND SEQUENCE NUMBER FIELDS.
      DATA ZERO/0/
C-----08/08/2012 DEFINE CODE NAME
      CODENAME = 'MERGER  '
C-----INITIALIZE TIMER
      CALL TIMER
c-----------------------------------------------------------------------
C
C     DEFINE INPUT AND OUTPUT UNIT NUMBERS.
C
c-----------------------------------------------------------------------
      CALL FILIO1
C-----IDENTIFY PROGRAM
      WRITE(OUTP,440)
      WRITE(*   ,440)
c-----------------------------------------------------------------------
C
C     TERMINATE IF ERROR OPENING INPUT FILE
C
c-----------------------------------------------------------------------
      IF(ISTAT1.EQ.1) THEN
      WRITE(OUTP,10)
      WRITE(   *,10)
   10 FORMAT(//' ERROR - Opening MERGER.INP input parameter file'//)
      CALL ENDERROR
      ENDIF
c-----------------------------------------------------------------------
C
C     READ AND INTERPRET ALL INPUT PARAMETERS.
C
c-----------------------------------------------------------------------
C-----OUTPUT REPORT TITLE.
      WRITE(OUTP,450)
      WRITE(*   ,450)
C-----READ MERGED FILENAME.
      OTAPE=10
      READ(INP,20) FILEOUT
   20 FORMAT(A72)
C-----USE STANDARD FILENAME IF BLANK.
      IF(FILEOUT.NE.BLANK) GO TO 30
      FILEOUT = FILE1
C-----PRINT FINAL FILENAMES
   30 WRITE(OUTP,470) FILEOUT
      WRITE(*   ,470) FILEOUT
C-----READ OUTPUT FILE LABEL AND RETRIEVAL CRITERIA (IGETHOW).
      READ(INP,40) (KCARD(I),I=1,17),KTAPE,IGETHOW
   40 FORMAT(2A4,A3,13A4,A3,I4,I2,I3,I5)
      IF(IGETHOW.NE.0) IGETHOW=1
      IGET=IGETHOW+1
C-----LIST MERGED UNIT NUMBER AND FILE LABEL.
      WRITE(OUTP,480) (KCARD(I),I=1,17),KTAPE
      WRITE(OUTP,460) MESSY(IGET)
      WRITE(*   ,480) (KCARD(I),I=1,17),KTAPE
      WRITE(*   ,460) MESSY(IGET)
C-----READ UP TO 99 UNIT NUMBERS (LIST IS TERMINATED BY BLANK CARD)
      WRITE(OUTP,490)
      WRITE(*   ,490)
      ITAPE=10
      DO 50 NUNIT=1,MAXTAPE
      READ(INP,20) FILEIN(NUNIT)
C-----TERMINATE ON END OR end
      IF(FILEIN(NUNIT).EQ.ENDIN(1).OR.
     1   FILEIN(NUNIT).EQ.ENDIN(2)) GO TO 60
      ITAPE=ITAPE+1
      NTAPE(NUNIT)=ITAPE
C-----REPLACE BLANK FILENAME BY STANDARD.
      CALL PHILIP(FILEIN(NUNIT))
      WRITE(OUTP,500) FILEIN(NUNIT)
      WRITE(*   ,500) FILEIN(NUNIT)
   50 CONTINUE
C-----MAXTAPE TAPES SPECIFIED SO FAR.
      WRITE(OUTP,550) MAXTAPE
      WRITE(*   ,550) MAXTAPE
      CALL ENDERROR
      NUNIT=100
   60 NUNIT=NUNIT-1
C-----READ ALL MAT/MF/MT OR ZA/MF/MT RANGE REQUESTS.
      CALL ASK4IT
C-----MERGE REQUIRES ONE OR MORE UNITS IF MAT/MF/MT OR ZA/MF/MT
C-----RANGES ARE GIVEN AND TWO OR MORE UNITS IF ALL DATA IS TO BE
C-----MERGED (NO RANGES GIVEN).
      IF(NUNIT.lt.1) go to 70
      IF(NUNIT.gt.1) go to 80
      IF(MYWISH.GT.0) GO TO 80
      WRITE(OUTP,540)
      WRITE(*   ,540)
      CALL ENDERROR
   70 WRITE(OUTP,520)
      WRITE(*   ,520)
      CALL ENDERROR
c-----------------------------------------------------------------------
C
C     DEFINE FILE NAMES.
C
c-----------------------------------------------------------------------
   80 CALL FILIO2
c-----------------------------------------------------------------------
C
C     ALL INPUT PARAMETERS HAVE BEEN READ AND CHECKED. OUTPUT HEADING
C     FOR REPORT LISTING AND FILE LABEL. INITIALIZE ALL PARAMETERS AND
C     POSITION TO FIRST SECTION OF EACH FILE.
C
c-----------------------------------------------------------------------
C-----LIST TITLE FOR OUTPUT REPORT.
      WRITE(OUTP,510)
      WRITE(*   ,510)
C-----INITIALIZE OUTPUT CARD COUNT.
      TAPCRD=1
C-----INITIALIZE LAST MAT AND SEQUENCE NUMBER.
      MATLAS=0
      NOSEQ=0
C-----INITIALIZE MATERIAL AND SECTION COUNTS.
      MATOUT=0
      MTOUT=0
      MTDUP=0
      MTSORT=0
c-----------------------------------------------------------------------
C
C     POSITION TO FIRST SECTION OF EACH FILE.
C
c-----------------------------------------------------------------------
      DO 120 IUNIT=1,NUNIT
      ITAPE=NTAPE(IUNIT)
      READ(ITAPE,40) (ICARD(I,IUNIT),I=1,17),NCARD(1,IUNIT)
      IF(IUNIT.GT.1) GO TO 110
c-----------------------------------------------------------------------
C
C     OUTPUT FILE LABEL. EITHER AS READ OR IF THIS IS BLANK USE LABEL
C     FROM FIRST FILE READ.
C
c-----------------------------------------------------------------------
      DO 90 I=1,17
      IF(KCARD(I).NE.BLANK) GO TO 100
   90 CONTINUE
C-----LABEL FROM FIRST FILE READ.
      IF(KTAPE.LE.0) KTAPE=NCARD(1,1)
      WRITE(OTAPE,40) (ICARD(I,1),I=1,17),KTAPE,ZERO,ZERO,ZERO
      GO TO 110
C-----LABEL AS INPUT.
  100 IF(KTAPE.LE.0) KTAPE=NCARD(1,1)
      WRITE(OTAPE,40) (KCARD(I),I=1,17),KTAPE,ZERO,ZERO,ZERO
  110 READ(ITAPE,40) (ICARD(I,IUNIT),I=1,17),
     1 (NCARD(I,IUNIT),I=1,3)
      CALL IN9(ZATAB(IUNIT),ICARD(1,IUNIT))
      IF(NCARD(3,IUNIT).gt.0) go to 120
      IF(NCARD(1,IUNIT).ge.0) go to 110
      NCARD(1,IUNIT)=99999
  120 IZATAB(IUNIT)=ZATAB(IUNIT)
c-----------------------------------------------------------------------
C
C     HEAD CARD OF THE NEXT SECTION OF EACH FILE HAS ALREADY BEEN READ.
C     SELECT THE SECTION WITH THE LOWEST MAT/MF/MT.
C
c-----------------------------------------------------------------------
C-----SELECT SMALLEST MAT/MF/MT.
  130 ISMALL=1
      IF(NUNIT.LT.2) GO TO 170
      DO 160 IUNIT=2,NUNIT
      DO 140 J=1,3
      IF(NCARD(J,IUNIT).lt.NCARD(J,ISMALL)) go to 150
      IF(NCARD(J,IUNIT).gt.NCARD(J,ISMALL)) go to 160
  140 CONTINUE
      GO TO 160
  150 ISMALL=IUNIT
  160 CONTINUE
c-----------------------------------------------------------------------
C
C     COMPARE SELECTED SECTION TO MAT/MF/MT OR ZA/MF/MT REQUEST RANGES
C     AND DECIDE TO EITHER SKIP OR COPY THE SELECTED SECTION.
C
c-----------------------------------------------------------------------
C-----DEFINE UNIT TO READ FROM.
  170 ITAPE=NTAPE(ISMALL)
C-----COMPARE MAT/MF/MT OR ZA/MF/MT OF SELECTED SECTION TO RETRIEVAL
C-----CRITERIA.
      IF(MYWISH.LE.0) GO TO 220
C-----USE IMOK TO CHECK FOR END OF DATA (FOR MAT REQUESTS WHEN CURRENT
C-----MAT EXCEEDS ALL REQUESTED RANGES. FOR ZA REQUESTS MUST SEARCH
C-----ENTIRE FILE).
      IMOK=IGETHOW
      DO 210 KWISH=1,MYWISH
      IF(IGETHOW.EQ.0) GO TO 180
C-----ZA REQUEST. COMPARE CURRENT ZA TO EACH ZA RANGE.
      IF(IZATAB(ISMALL).LT.IWISH(1,1,KWISH).OR.
     1 IZATAB(ISMALL).GT.IWISH(1,2,KWISH)) GO TO 210
      GO TO 190
C-----MAT REQUEST. FIRST COMPARE TO UPPER MAT LIMIT OF REQUEST. IF
C-----CURRENT MAT IS NOT BEYOND RANGE OF REQUEST SET FLAG TO INDICATE
C-----THAT FILE MUST BE SEARCHED FURTHER. THEN COMPARE TO LOWER MAT
C-----LIMIT.
  180 IF(NCARD(1,ISMALL).GT.IWISH(1,2,KWISH)) GO TO 210
      IMOK=1
      IF(NCARD(1,ISMALL).LT.IWISH(1,1,KWISH)) GO TO 210
  190 DO 200 J=2,3
      IF(NCARD(J,ISMALL).LT.IWISH(J,1,KWISH).OR.
     1 NCARD(J,ISMALL).GT.IWISH(J,2,KWISH)) GO TO 210
  200 CONTINUE
C-----THIS SECTION WAS EXPLICITLY REQUESTED.
      GO TO 220
  210 CONTINUE
C-----THIS SECTION WAS NOT REQUESTED. SKIP IT IF FILE STILL CONTAINS
C-----DATA IN RANGE OF REQUESTS. OTHERWISE SET MAT OF THIS FILE TO
C-----PREVENT ANY FURTHER READS.
      IF(IMOK.le.0) go to 370
      go to 280
c-----------------------------------------------------------------------
C
C     CURRENT SECTION WAS REQUESTED. SAVE CURRENT MAT/MF/MT. IF THIS IS
C     A NEW MF OR MAT OUTPUT FEND OR MEND CARD AFTER PRECEEDING SECTION.
C     IF THIS IS A NEW MAT OUTPUT REPORT FOR PRECEEDING MAT. CHECK
C     CURRENT MAT/MF/MT AGAINST LAST MAT/MF/MT IN ORDER TO SKIP EITHER
C     A DUPLICATE SECTION (I.E. SAME MAT/MF/MT) OR A SECTION WHICH IS
C     NOT IN SORT ORDER (I.E. CURRENT MAT/MF/MT LESS THAN LAST ONE).
C     IF MAT/MF/MT IS ACCEPTABLE COPY SECTION.
C
c-----------------------------------------------------------------------
C-----SECTION REQUESTED. SAVE MAT/MF/MT OF SECTION THAT WILL BE COPIED.
  220 MAT=NCARD(1,ISMALL)
      MF=NCARD(2,ISMALL)
      MT=NCARD(3,ISMALL)
C-----COMPARE MAT/MF/MT OF CURRENT SECTION TO MAT/MF/MT OF LAST
C-----SECTION THAT WAS OUTPUT TO MERGED FILE.
      IF(MATLAS.LE.0) GO TO 290
      IF(MAT.lt.MATLAS) go to 250
      IF(MAT.eq.MATLAS) go to 230
C-----NEW MAT. OUTPUT FEND AND MEND CARDS.
      NOSEQ=NXTSEQ(NOSEQ)
      WRITE(OTAPE,430) MATLAS,ZERO,ZERO,NOSEQ
      NOSEQ=NXTSEQ(NOSEQ)
      WRITE(OTAPE,430) ZERO,ZERO,ZERO,NOSEQ
C-----DEFINE NEW MAT AND FILE CARD TOTALS.
      MATCRD=MATCRD+2
      TAPCRD=TAPCRD+MATCRD
C-----INITIALIZE SEQUENCE NUMBER FOR NEXT MAT.
      NOSEQ=0
C-----INCREMENT MATERIAL COUNT.
      MATOUT=MATOUT+1
      WRITE(OUTP,530) MATCRD
      WRITE(*   ,530) MATCRD
      GO TO 290
  230 IF(MF.lt.MFLAST) go to 250
      IF(MF.eq.MFLAST) go to 240
C-----NEW FILE. OUTPUT FEND CARD.
      NOSEQ=NXTSEQ(NOSEQ)
      WRITE(OTAPE,430) MATLAS,ZERO,ZERO,NOSEQ
      MATCRD=MATCRD+1
      GO TO 300
  240 IF(MT.eq.MTLAST) go to 260
      IF(MT.gt.MTLAST) go to 300
C-----FILE TO BE MERGED IS NOT SORTED.
  250 WRITE(OUTP,590) IZATAB(ISMALL),MAT,MF,MT,ITAPE,NOWISH(KWISH)
      WRITE(*   ,590) IZATAB(ISMALL),MAT,MF,MT,ITAPE,NOWISH(KWISH)
      MTSORT=MTSORT+1
      GO TO 280
C-----DUPLICATE SECTION. IF ON SAME FILE AS LAST SECTION PRINT ERROR
C-----MESSAGE AND COPY. IF ON DIFFERENT FILE PRINT ERROR MESSAGE AND
C-----SKIP SECTION.
  260 IF(ITAPE.ne.LSTAPE) go to 270
C-----SET FLAG TO INDICATE CURRENT SECTION HAS SAME MAT/MF/MT AS LAST
C-----SECTION.
      IMADUP=1
      GO TO 310
  270 WRITE(OUTP,570) IZATAB(ISMALL),MAT,MF,MT,ITAPE,NOWISH(KWISH)
      WRITE(*   ,570) IZATAB(ISMALL),MAT,MF,MT,ITAPE,NOWISH(KWISH)
      MTDUP=MTDUP+1
C-----SKIP SECTION.
  280 READ(ITAPE,430) (NCARD(J,ISMALL),J=1,3)
      IF(NCARD(3,ISMALL).le.0) go to 340
      go to 280
C-----NEW MAT. INITIALIZE MAT CARD COUNT.
  290 MATCRD=0
c-----------------------------------------------------------------------
C
C     REQUESTED SECTION FOUND. COPY SECTION TO OUTPUT FILE.
C
c-----------------------------------------------------------------------
C-----SET FLAG TO INDICATE CURRENT SECTION DOES NOT HAVE SAME MAT/MF/MT
C-----AS LAST SECTION.
  300 IMADUP=0
C-----CONVERT ZA TO STANDARD FORM FOR OUTPUT AND OUTPUT FIRST
C-----CARD OF SECTION. INITIALIZE CARD COUNT FOR SECTION.
  310 NOSEQ=NXTSEQ(NOSEQ)
      WRITE(OTAPE,40)
     1 (ICARD(J,ISMALL),J=1,17),(NCARD(J,ISMALL),J=1,3),NOSEQ
      MTCARD=1
  320 READ(ITAPE,40) (ICARD(J,ISMALL),J=1,17),
     1 (NCARD(J,ISMALL),J=1,3)
C-----INCREMENT CARD SEQUENCE NUMBER AND OUTPUT CARD. USE STANDARD
C-----FORMAT FOR SEND CARDS.
      NOSEQ=NXTSEQ(NOSEQ)
      IF(NCARD(3,ISMALL).LE.0) GO TO 330
      WRITE(OTAPE,40) (ICARD(J,ISMALL),J=1,17),
     1 (NCARD(J,ISMALL),J=1,3),NOSEQ
      MTCARD=MTCARD+1
      GO TO 320
C-----END OF SECTION FOUND. OUTPUT SEND CARD IN STANDARD FORMAT.
  330 WRITE(OTAPE,430) (NCARD(J,ISMALL),J=1,3),NOSEQ
C-----INCREMENT COUNTS OF SECTIONS, CARDS IN SECTION AND CARDS
C-----IN MAT.
      MTOUT=MTOUT+1
      MTCARD=MTCARD+1
      MATCRD=MATCRD+MTCARD
C-----PRINT RECORD OF SECTION THAT WAS JUST OUTPUT.
      IF(IMADUP.EQ.0) WRITE(OUTP,560) IZATAB(ISMALL),MAT,MF,MT,
     1 MTCARD,ITAPE,NOWISH(KWISH)
      IF(IMADUP.EQ.1) WRITE(OUTP,580) IZATAB(ISMALL),MAT,MF,MT,
     1 MTCARD,ITAPE,NOWISH(KWISH)
      IF(IMADUP.EQ.0) WRITE(*   ,560) IZATAB(ISMALL),MAT,MF,MT,
     1 MTCARD,ITAPE,NOWISH(KWISH)
      IF(IMADUP.EQ.1) WRITE(*   ,580) IZATAB(ISMALL),MAT,MF,MT,
     1 MTCARD,ITAPE,NOWISH(KWISH)
C-----INCREMENT SECTION COUNT AND MATERIAL COUNT (IF THIS IS A NEW
C-----MAT) FOR REQUEST.
      MTGOT(KWISH)=MTGOT(KWISH)+1
      ICARDGOT(KWISH)=ICARDGOT(KWISH)+MTCARD
      IF(MATNOW(KWISH).NE.MAT) MATGOT(KWISH)=MATGOT(KWISH)+1
      MATNOW(KWISH)=MAT
C-----SAVE (MAT,MF,MT,FILE) OF THIS SECTION.
  340 MATLAS=MAT
      MFLAST=MF
      MTLAST=MT
      LSTAPE=ITAPE
c-----------------------------------------------------------------------
C
C     SECTION HAS BEEN COPIED. POSITION FILE TO BEGINNING OF NEXT
C     SECTION OR INDICATE END OF FILE. IF END OF FILE IS REACHED
C     CHECK TO SEE IF ANY OTHER SECTIONS REMAIN TO BE MERGED.
C
c-----------------------------------------------------------------------
  350 READ(ITAPE,40) (ICARD(J,ISMALL),J=1,17),
     1 (NCARD(J,ISMALL),J=1,3)
      CALL IN9(ZATAB(ISMALL),ICARD(1,ISMALL))
      IF(NCARD(3,ISMALL).gt.0) go to 360
      IF(NCARD(1,ISMALL).lt.0) go to 370
      go to 350
C-----DEFINE NEW ZA FOR THIS SECTION.
  360 IZATAB(ISMALL)=ZATAB(ISMALL)
      GO TO 130
C-----END OF FILE (TEND) CARD READ. DEFINE MAT TO PREVENT ANY
C-----MORE READS FROM THIS UNIT.
  370 NCARD(1,ISMALL)=99999
C-----SEE IF THERE ARE ANY ACTIVE UNITS LEFT.
      DO 380 IUNIT=1,NUNIT
      IF(NCARD(1,IUNIT).LT.10000) GO TO 130
  380 CONTINUE
C=======================================================================
C
C     END OF RUN
C
C     NO MORE SECTIONS TO MERGE. ADD FEND, MEND AND TEND CARDS AFTER
C     LAST MAT. OUTPUT FINAL REPORTS AND THEN TERMINATE.
C
C=======================================================================
C-----ALL MATERIALS MERGED. HAVE ANY DATA BEEN RETRIEVED.
      IF(MATLAS.GT.0) GO TO 390
C-----NO MAT/MF/MT SATIFY RETRIEVAL CRITERIA.
      WRITE(OUTP,670)
      WRITE(*   ,670)
c-----04/12/04 - ADD TEND LINE
      WRITE(OTAPE,420)
      CALL ENDERROR
C-----OUTPUT FEND, MEND AND TEND CARDS.
  390 NOSEQ=NXTSEQ(NOSEQ)
      WRITE(OTAPE,430) MATLAS,ZERO,ZERO,NOSEQ
      NOSEQ=NXTSEQ(NOSEQ)
      WRITE(OTAPE,430) ZERO,ZERO,ZERO,NOSEQ
      MATCRD=MATCRD+2
      WRITE(OTAPE,420)
      TAPCRD=TAPCRD+MATCRD+1
C-----END ENDF/B FORMATTED OUTPUT FILE.
C-----LIST MATERIAL AND SECTION COUNTS.
      MATOUT=MATOUT+1
      WRITE(OUTP,600) MATCRD,TAPCRD,MATOUT,MTOUT,TAPCRD
      IF(MTDUP.GT.0) WRITE(OUTP,610) MTDUP
      IF(MTSORT.GT.0) WRITE(OUTP,620) MTSORT
      WRITE(*   ,600) MATCRD,TAPCRD,MATOUT,MTOUT,TAPCRD
      IF(MTDUP.GT.0) WRITE(*   ,610) MTDUP
      IF(MTSORT.GT.0) WRITE(*   ,620) MTSORT
C-----LIST DATA RETRIEVED FOR EACH REQUEST.
      IF(MYWISH.LE.0) GO TO 410
      IF(IGETHOW.EQ.0) WRITE(OUTP,630)
      IF(IGETHOW.NE.0) WRITE(OUTP,640)
      IF(IGETHOW.EQ.0) WRITE(*   ,630)
      IF(IGETHOW.NE.0) WRITE(*   ,640)
      DO 400 K=1,MYWISH
      WRITE(OUTP,650) NOWISH(K),((IWISH(I,J,K),I=1,3),J=1,2),MATGOT(K),
     1 MTGOT(K),ICARDGOT(K)
  400 WRITE(*   ,650) NOWISH(K),((IWISH(I,J,K),I=1,3),J=1,2),MATGOT(K),
     1 MTGOT(K),ICARDGOT(K)
      WRITE(OUTP,660) MATOUT,MTOUT,TAPCRD
      WRITE(*   ,660) MATOUT,MTOUT,TAPCRD
  410 CALL ENDIT
      GO TO 390 ! CANNOT GET TO HERE.
  420 FORMAT(68X,'-1 0  0    0')
  430 FORMAT(66X,I4,I2,I3,I5)
  440 FORMAT('  Merge ENDF/B Data into MAT/MF/MT Order (MERGER 2019-1)'/
     1 1X,72('*'))
  450 FORMAT(' Interpretation of Input Parameters'/1X,72('*'))
  460 FORMAT(' Retrieval Criteria-----------',7X,A4)
  470 FORMAT(' Output Filename'/1X,72('-')/
     1 1X,A72/1X,72('-'))
  480 FORMAT(
     1 18H Merged File Label/1X,72('-')/1X,2A4,A3,13A4,A3,I4/
     2 1X,72('-'))
  490 FORMAT(1X,72('-')/' Input Filenames'/1X,72('-'))
  500 FORMAT(1X,A72)
  510 FORMAT(1X,72('-')/1X,72('*')/' Retrieved Data'/
     1 1X,72('*')/'     ZA  MAT MF  MT  Lines  Unit Request Message'/
     2 32X,'  Number'/1X,72('-'))
  520 FORMAT(1X,72('-')/
     1 ' Two or More Units Required for Merge'/
     2 ' Execution Terminated')
  530 FORMAT(1X,72('-')/10X,'MAT Lines',I7/1X,72('-'))
  540 FORMAT(1X,72('-')/
     1 ' No Units Specified for Merge'/
     2 ' Execution Terminated')
  550 FORMAT(1X,72('-')/
     1 ' ERROR - Over',I5,' Units Specified for Merge'/
     2 ' Execution Terminated')
  560 FORMAT(I7,I5,I3,I4,I7,I6,I8)
  570 FORMAT(I7,I5,I3,I4,7X,I6,I8,' Duplicate MAT/MF/MT (Skipped)')
  580 FORMAT(I7,I5,I3,I4,I7,I6,I8,' WARNING - Duplicate MAT/MF/MT',
     1 ' On Same File (Copied)')
  590 FORMAT(I7,I5,I3,I4,7X,I6,I8,
     1 ' Section is NOT in MAT/MF/MT Order (Skipped)')
  600 FORMAT(1X,72('-')/10X,'MAT Lines',I7/1X,72('-')/
     1 9X,'Tape Lines',I7/1X,72('-')/
     2 1X,72('*')/' Retrieval Statistics'/1X,72('*')/
     3 ' Merged Materials---',I11/
     4 ' Merged Sections----',I11/
     5 ' Merged Lines-------',I11)
  610 FORMAT(' Duplicate Sections-',I11,' (Skipped)')
  620 FORMAT(' Unsorted Sections--',I11,
     1 ' (ENDF/B Tapes were NOT in MAT/MF/MT Order)')
  630 FORMAT(1X,72('-')/' Retrieved Data for Each Request'/
     1 1X,72('-')/
     2 ' Request *   Lower Limit *   Upper Limit *',11X,' Retrieved'/
     3 '  Number *    MAT MF  MT *    MAT MF  MT *',2X,
     4 ' Materials    Sections  Lines'/1X,72('-'))
  640 FORMAT(1X,72('-')/' Retrieved Data for Each Request'/
     1 1X,72('-')/
     2 ' Request *   Lower Limit *   Upper Limit *',11X,' Retrieved'/
     3 '  Number *     ZA MF  MT *     ZA MF  MT *',2X,
     4 ' Materials    Sections  Lines'/1X,72('-'))
  650 FORMAT(I8,' *',I7,I3,I4,' *',I7,I3,I4,' *',2I12,I7)
  660 FORMAT(1X,72('-')/'  Totals',34X,2I12,I7/1X,72('-')/
     1 ' Note..The Line Count of Retrieved Data for Each Request Does'/
     2 '       NOT Include FEND, MEND AND TEND Lines. Therefore the  '/
     3 '       Total Number of Lines Actually Retrieved and Written  '/
     4 '       on the Merged File Will be More than the Sum of the   '/
     5 '       Number of Lines for All Requests.                     ')
  670 FORMAT(' WARNING - No MAT/MF/MT Combination Satisfies Retrieval',
     1 ' Criteria'/1X,72('-'))
      END
      SUBROUTINE ASK4IT
C=======================================================================
C
C     READ LIST OF UP TO 100 MAT/MF/MT OR ZA/MF/MT RANGES (EACH
C     RANGE IS DEFINED BY A LOWER AND UPPER LIMIT). RANGES ARE
C     SPECIFIED ONE PER LINE. THE LIST OF RANGES IS TERMINATED BY
C     A BLANK LINE. IF THERE ARE NO REQUESTS (I.E. FIRST LINE IS
C     BLANK) THE PROGRAM WILL REQUEST ALL DATA. IF THE UPPER MAT
C     OR ZA LIMIT OF ANY REQUEST IS ZERO, IT WILL BE SET EQUAL TO
C     THE LOWER LIMIT FOR THE SAME REQUEST (WITH THIS CONVENTION
C     IN ORDER TO REQUEST AN INDIVIDUAL MAT OR ZA THE USER NEED
C     ONLY SPECIFY THE MAT OR ZA ONCE (FOR THE LOWER LIMIT) AND THE
C     UPPER LIMIT WILL AUTOMATICALLY BE DEFINED BY THE PROGRAM. IF
C     THE UPPER MF OR MT LIMIT OF ANY REQUEST IS ZERO IT WILL BE SET
C     SET EQUAL TO THE MAXIMUM VALUE (MF=99, MT=999). WITH THIS
C     CONVENTION THE IF THE USER DOES NOT WISH TO RESTRICT THE RANGE
C     OF MF AND/OR MT FOR ANY REQUEST HE NEED NOT SPECIFY ANYTHING
C     (THE LOWER LIMIT WILL BE READ AS ZERO AND THE UPPER LIMIT WILL
C     BE SET TO THE MAXIMUM VALUE).
C
C=======================================================================
      INCLUDE 'implicit.h'
      INTEGER*4 OUTP,OTAPE,UPPER
      COMMON/ENDFIO/INP,OUTP,OTAPE,NUNIT
      INCLUDE 'merger.h'
      DIMENSION UPPER(3),MDUMB(6)
C-----DEFINE UPPER LIMIT FOR MAT/MF AND MT FIELDS.
      DATA UPPER/9999,99,999/
C-----SET UP LOOP OVER MAT/MF/MT OR ZA/MF/MT RANGE REQUESTS.
      DO 60 MYWISH=1,100
C-----INITIALIZE MAT AND MT COUNTS AND LAST MAT NUMBER READ FOR THIS
C-----REQUEST.
      MATGOT(MYWISH)=0
      MTGOT(MYWISH)=0
      ICARDGOT(MYWISH)=0
      MATNOW(MYWISH)=0
C-----READ NEXT RANGE REQUEST AND CHECK FOR END OF REQUEST LIST.
      READ(INP,10,END=100,ERR=100)
     1 ((IWISH(K,J,MYWISH),K=1,3),J=1,2),NOWISH(MYWISH)
   10 FORMAT(I6,I2,I3,I6,I2,I3,I11)
      DO 20 J=1,2
      DO 20 K=1,3
      IF(IWISH(K,J,MYWISH).GT.0) GO TO 30
   20 CONTINUE
C-----END OF REQUEST LIST.
      GO TO 100
C-----LIST HEADING FOR OUTPUT BEFORE FIRST REQUEST.
   30 IF(MYWISH.NE.1) GO TO 40
      IF(IGETHOW.EQ.0) WRITE(OUTP,110)
      IF(IGETHOW.NE.0) WRITE(OUTP,120)
      IF(IGETHOW.EQ.0) WRITE(*   ,110)
      IF(IGETHOW.NE.0) WRITE(*   ,120)
C-----IF UPPER LIMIT IS NOT GIVEN SET IT EQUAL TO LOWER LIMIT.
   40 IF(IWISH(1,2,MYWISH).LT.IWISH(1,1,MYWISH))
     1 IWISH(1,2,MYWISH)=IWISH(1,1,MYWISH)
C-----IF UPPER MF AND/OR MT LIMIT IS NOT GIVEN SET IT TO MAXIMUM.
      DO 50 K=1,3
      IF(IWISH(K,2,MYWISH).LE.0) IWISH(K,2,MYWISH)=UPPER(K)
   50 CONTINUE
C-----IF REQUEST NUMBER IS NOT SPECIFIED USE DEFAULT VALUE OF REQUEST
C-----INDEX.
      IF(NOWISH(MYWISH).LE.0) NOWISH(MYWISH)=MYWISH
      WRITE(OUTP,130) NOWISH(MYWISH),
     1 ((IWISH(K,J,MYWISH),K=1,3),J=1,2)
   60 WRITE(*   ,130) NOWISH(MYWISH),
     1 ((IWISH(K,J,MYWISH),K=1,3),J=1,2)
C-----100 REQUEST RANGES SPECIFIED. IF NEXT CARD IS NOT BLANK ABORT.
      READ(INP,10,END=80,ERR=80) MDUMB
      DO 70 J=1,6
      IF(MDUMB(J).GT.0) GO TO 90
   70 CONTINUE
   80 MYWISH=100
      RETURN
   90 WRITE(OUTP,150)
      WRITE(*   ,150)
      CALL ENDERROR
C-----END OF REQUEST LIST. IF NO REQUESTS LIST SPECIAL MESSAGE
C-----TO INDICATE THAT ALL DATA WILL BE RETRIEVED.
  100 MYWISH=MYWISH-1
      IF(MYWISH.LE.0) WRITE(OUTP,140)
      IF(MYWISH.LE.0) WRITE(*   ,140)
      RETURN
  110 FORMAT(1X,72('-')/' Retrieval Criteria'/1X,72('-')/
     2 ' Request *   Lower Limit *   Upper Limit  '/
     3 '  Number *    MAT MF  MT *    MAT MF  MT  '/1X,72('-'))
  120 FORMAT(1X,72('-')/' Retrieval Criteria'/1X,72('-')/
     2 ' Request *   Lower Limit *   Upper Limit  '/
     3 '  Number *     ZA MF  MT *     ZA MF  MT  '/1X,72('-'))
  130 FORMAT(I8,' *',I7,I3,I4,' *',I7,I3,I4)
  140 FORMAT(1X,72('-')/' Retrieve All Data')
  150 FORMAT(1X,72('-')/
     1 ' Over 100 Range Requests for Retrieval'/
     2 ' Execution Terminated')
      END
      SUBROUTINE FILIO1
C=======================================================================
C
C     DEFINE INPUT AND OUTPUT UNITS AND OPTIONALLY DEFINE FILE NAMES
C
C=======================================================================
      INCLUDE 'implicit.h'
      INTEGER*4 OUTP,OTAPE
      CHARACTER*72 FILE72
      COMMON/ENDFIO/INP,OUTP,OTAPE,NUNIT
      COMMON/IOSTATUS/ISTAT1,ISTAT2
      INCLUDE 'merger.h'
C-----DEFINE INPUT AND OUTPUT UNITS.
      INP=2
      OUTP=3
C-----DEFINE INPUT AND OUTPUT FILE NAMES.
      OPEN(OUTP,FILE='MERGER.LST',STATUS='UNKNOWN')
      OPEN(INP,FILE='MERGER.INP',STATUS='OLD',ERR=10)
      ISTAT1 = 0
      RETURN
   10 ISTAT1 = 1
      RETURN
      ENTRY FILIO2
c-----------------------------------------------------------------------
C
C     DEFINE FILE NAMES.
C
c-----------------------------------------------------------------------
      OPEN(OTAPE,FILE=FILEOUT,STATUS='UNKNOWN')
      ISTAT2 = 0
      DO 40 N=1,NUNIT
      ITAPE=NTAPE(N)
      FILE72=FILEIN(N)
      OPEN(ITAPE,FILE=FILE72,STATUS='OLD',ERR=20)
      GO TO 40
   20 ISTAT2 = 1
      WRITE(OUTP,30) FILE72
      WRITE(   *,30) FILE72
   30 FORMAT(' ERROR - opening ',A72)
   40 CONTINUE
C-----TERMINATE IF ANY ERROR OPENING FILES.
      IF(ISTAT2.EQ.1) CALL ENDERROR
      RETURN
      END
      SUBROUTINE PHILIP(FILEX)
C=======================================================================
C
C     REPLACE BLANK FILENAME BY STANDARD.
C
C=======================================================================
      INCLUDE 'implicit.h'
      CHARACTER*1 FILEB,FILLX,FILEX,BLANK
      DIMENSION FILEX(60),FILEB(9),FILLX(10)
C-----DEFINE BASIC FILENAME.
      DATA FILEB/'E','N','D','F','B','.','I','N','1'/
C-----DEFINE FILENAME VARIATIONS.
      DATA FILLX/'1','2','3','4','5','6','7','8','9','0'/
      DATA BLANK/' '/
      DATA IX1/0/
      DATA IX2/0/
C-----NOTHING TO DO IF FILENAME IS NOT BLANK.
      DO 10 I=1,60
      IF(FILEX(I).NE.BLANK) GO TO 40
   10 CONTINUE
c-----------------------------------------------------------------------
C
C     INCREMENT STANDARD FILENAME.
C
c-----------------------------------------------------------------------
C-----INCREMENT LAST DIGIT 1, 2, .....8, 9, 0
      IX1=IX1+1
      FILEB(9)=FILLX(IX1)
      IF(IX1.LT.10) GO TO 20
C-----RESET LAST DIGIT AND INCREMENT NEXT TO LAST DIGIT 1, 2, .....
      IX1=0
      IX2=IX2+1
      FILEB(8)=FILLX(IX2)
C-----DEFINE STANDARD FILENAME.
   20 DO 30 I=1,9
   30 FILEX(I)=FILEB(I)
   40 RETURN
      END
